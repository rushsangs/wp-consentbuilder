{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAO,MAAMA,QAAQ,GAAG,EAAjB;AACA,MAAMC,qBAAqB,GAAG,MAA9B;AACA,MAAMC,sBAAsB,GAAG,OAA/B;AACA,MAAMC,2BAA2B,GAAG,YAApC;AACA,MAAMC,uBAAuB,GAAG,QAAhC;AACA,MAAMC,WAAW,GAAG,CAAE,YAAF,EAAgB,UAAhB,CAApB;AACA,MAAMC,mBAAmB,GAAG,CAAE,OAAF,CAA5B;AACA,MAAMC,8BAA8B,GAAG,CAAvC;;;;;;;;;;;;;;;;;;;;;;;;;ACPP;AACA;AACA;AACC;AACA;AAEA;AACD;AACA;;AACC;AAEA,MAAMK,eAAe,GAAG;EACpBC,KAAK,EAAE;IACHC,IAAI,EAAE;EADH,CADa;EAIpBC,GAAG,EAAE;IACDD,IAAI,EAAE,QADL;IAEDE,MAAM,EAAE,WAFP;IAGDC,QAAQ,EAAE,KAHT;IAIDC,SAAS,EAAE;EAJV,CAJe;EAUpBC,GAAG,EAAE;IACDL,IAAI,EAAE,QADL;IAEDE,MAAM,EAAE,WAFP;IAGDC,QAAQ,EAAE,KAHT;IAIDC,SAAS,EAAE,KAJV;IAKDE,OAAO,EAAE;EALR,CAVe;EAiBpBC,OAAO,EAAE;IACLP,IAAI,EAAE,QADD;IAELE,MAAM,EAAE,MAFH;IAGLC,QAAQ,EAAE;EAHL,CAjBW;EAsBpBK,KAAK,EAAE;IACHR,IAAI,EAAE,QADH;IAEHE,MAAM,EAAE,WAFL;IAGHC,QAAQ,EAAE,KAHP;IAIHC,SAAS,EAAE;EAJR,CAtBa;EA4BpBK,IAAI,EAAE;IACFT,IAAI,EAAE,QADJ;IAEFE,MAAM,EAAE,WAFN;IAGFC,QAAQ,EAAE,YAHR;IAIFC,SAAS,EAAE;EAJT,CA5Bc;EAkCpBM,GAAG,EAAE;IACDV,IAAI,EAAE,QADL;IAEDE,MAAM,EAAE,WAFP;IAGDC,QAAQ,EAAE,YAHT;IAIDC,SAAS,EAAE;EAJV,CAlCe;EAwCpBO,SAAS,EAAE;IACPX,IAAI,EAAE,QADC;IAEPE,MAAM,EAAE,WAFD;IAGPC,QAAQ,EAAE,YAHH;IAIPC,SAAS,EAAE;EAJJ,CAxCS;EA8CpBQ,EAAE,EAAE;IACAZ,IAAI,EAAE;EADN,CA9CgB;EAiDpBa,KAAK,EAAE;IACHb,IAAI,EAAE;EADH,CAjDa;EAoDpBc,MAAM,EAAE;IACJd,IAAI,EAAE;EADF,CApDY;EAuDpBe,QAAQ,EAAE;IACNf,IAAI,EAAE;EADA,CAvDU;EA0DpBgB,eAAe,EAAE;IACbhB,IAAI,EAAE;EADO,CA1DG;EA6DpBiB,UAAU,EAAE;IACRjB,IAAI,EAAE,QADE;IAERE,MAAM,EAAE,WAFA;IAGRC,QAAQ,EAAE,YAHF;IAIRC,SAAS,EAAE;EAJH;AA7DQ,CAAxB;AAqEA,MAAMc,aAAa,GAAG;EAClBC,MAAM,EAAE,IADU;EAElBC,KAAK,EAAE;IACHC,qBAAqB,EAAE,KADpB;IAEHC,IAAI,EAAE,KAFH;IAGHC,UAAU,EAAE;EAHT,CAFW;EAOlBC,oBAAoB,EAAE;IAClBC,MAAM,EAAE,IADU;IAElBC,6BAA6B,EAAE;MAC3BD,MAAM,EAAE;IADmB;EAFb;AAPJ,CAAtB;AAeA,MAAME,UAAU,GAAG,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,EAAE9B,eADhB;EAEI+B,QAAQ,EAAEX,aAFd;;EAGIY,IAAI,OAAmB;IAAA,IAAjB;MAAEF;IAAF,CAAiB;IACnB,MAAM;MACF3B,GADE;MAEFI,GAFE;MAGFE,OAHE;MAIFR,KAJE;MAKFU,IALE;MAMFC,GANE;MAOFC,SAPE;MAQFE,KARE;MASFC,MATE;MAUFF,EAVE;MAWFK,UAXE;MAYFF,QAZE;MAaFP;IAbE,IAcFoB,UAdJ;IAgBA,MAAMG,MAAM,GAAGpC,+CAAO,CAAEe,GAAF,CAAP,GAAiBsB,SAAjB,GAA6BtB,GAA5C;IAEA,MAAMuB,OAAO,GAAGvC,yIAAU,CAAE;MACxB,CAAG,QAAQK,KAAO,EAAlB,GAAuBA,KADC;MAExB,CAAG,QAAQgB,QAAU,EAArB,GAA0BA,QAFF;MAGxB,cAAcF,KAAK,IAAIC;IAHC,CAAF,CAA1B;IAMA,MAAMoB,KAAK,GACP;MACI,GAAG,EAAGjC,GADV;MAEI,GAAG,EAAGI,GAFV;MAGI,SAAS,EAAGO,EAAE,GAAI,YAAYA,EAAI,EAApB,GAAwB,IAH1C;MAII,KAAK,EAAGC,KAJZ;MAKI,MAAM,EAAGC,MALb;MAMI,KAAK,EAAGN;IANZ,EADJ;IAWA,MAAM2B,MAAM,GACR,kIACM1B,IAAI,GACF;MACI,SAAS,EAAGE,SADhB;MAEI,IAAI,EAAGF,IAFX;MAGI,MAAM,EAAGQ,UAHb;MAII,GAAG,EAAGc;IAJV,GAMMG,KANN,CADE,GAUFA,KAXR,EAaM,CAAEtC,qEAAA,CAAkBW,OAAlB,CAAF,IACE,kEAAC,qEAAD;MACI,OAAO,EAAC,YADZ;MAEI,KAAK,EAAGA;IAFZ,EAdR,CADJ;IAuBA,OACI,4EAAaV,uEAAA,CAAoB;MAAEuC,SAAS,EAAEH;IAAb,CAApB,CAAb,EACME,MADN,CADJ;EAKH;;AAnEL,CATe,EA8Ef;EACIP,UAAU,EAAE,EACR,GAAG9B,eADK;IAERU,KAAK,EAAE;MACHR,IAAI,EAAE,QADH;MAEHE,MAAM,EAAE,WAFL;MAGHC,QAAQ,EAAE,KAHP;MAIHC,SAAS,EAAE;IAJR,CAFC;IAQRW,QAAQ,EAAE;MACNf,IAAI,EAAE;IADA;EARF,CADhB;EAaI6B,QAAQ,EAAEX,aAbd;;EAcIY,IAAI,QAAmB;IAAA,IAAjB;MAAEF;IAAF,CAAiB;IACnB,MAAM;MACF3B,GADE;MAEFI,GAFE;MAGFE,OAHE;MAIFR,KAJE;MAKFU,IALE;MAMFC,GANE;MAOFC,SAPE;MAQFE,KARE;MASFC,MATE;MAUFF,EAVE;MAWFK,UAXE;MAYFF,QAZE;MAaFP;IAbE,IAcFoB,UAdJ;IAgBA,MAAMG,MAAM,GAAGpC,+CAAO,CAAEe,GAAF,CAAP,GAAiBsB,SAAjB,GAA6BtB,GAA5C;IAEA,MAAMuB,OAAO,GAAGvC,yIAAU,CAAE;MACxB,CAAG,QAAQK,KAAO,EAAlB,GAAuBA,KADC;MAExB,CAAG,QAAQgB,QAAU,EAArB,GAA0BA,QAFF;MAGxB,cAAcF,KAAK,IAAIC;IAHC,CAAF,CAA1B;IAMA,MAAMoB,KAAK,GACP;MACI,GAAG,EAAGjC,GADV;MAEI,GAAG,EAAGI,GAFV;MAGI,SAAS,EAAGO,EAAE,GAAI,YAAYA,EAAI,EAApB,GAAwB,IAH1C;MAII,KAAK,EAAGC,KAJZ;MAKI,MAAM,EAAGC,MALb;MAMI,KAAK,EAAGN;IANZ,EADJ;IAWA,MAAM2B,MAAM,GACR,kIACM1B,IAAI,GACF;MACI,SAAS,EAAGE,SADhB;MAEI,IAAI,EAAGF,IAFX;MAGI,MAAM,EAAGQ,UAHb;MAII,GAAG,EAAGc;IAJV,GAMMG,KANN,CADE,GAUFA,KAXR,EAaM,CAAEtC,qEAAA,CAAkBW,OAAlB,CAAF,IACE,kEAAC,qEAAD;MACI,OAAO,EAAC,YADZ;MAEI,KAAK,EAAGA;IAFZ,EAdR,CADJ;;IAuBA,IAAK,WAAWR,KAAX,IAAoB,YAAYA,KAAhC,IAAyC,aAAaA,KAA3D,EAAmE;MAC/D,OACI,yEAAUF,uEAAA,EAAV,EACI;QAAQ,SAAS,EAAGoC;MAApB,GAAgCE,MAAhC,CADJ,CADJ;IAKH;;IAED,OACI,4EAAatC,uEAAA,CAAoB;MAAEuC,SAAS,EAAEH;IAAb,CAApB,CAAb,EACME,MADN,CADJ;EAKH;;AAtFL,CA9Ee,EAsKf;EACIP,UAAU,EAAE9B,eADhB;;EAEIgC,IAAI,QAAmB;IAAA,IAAjB;MAAEF;IAAF,CAAiB;IACnB,MAAM;MAAE3B,GAAF;MAAOI,GAAP;MAAYE,OAAZ;MAAqBR,KAArB;MAA4BU,IAA5B;MAAkCI,KAAlC;MAAyCC,MAAzC;MAAiDF;IAAjD,IACFgB,UADJ;IAGA,MAAMK,OAAO,GAAGvC,yIAAU,CAAE;MACxB,CAAG,QAAQK,KAAO,EAAlB,GAAuBA,KADC;MAExB,cAAcc,KAAK,IAAIC;IAFC,CAAF,CAA1B;IAKA,MAAMoB,KAAK,GACP;MACI,GAAG,EAAGjC,GADV;MAEI,GAAG,EAAGI,GAFV;MAGI,SAAS,EAAGO,EAAE,GAAI,YAAYA,EAAI,EAApB,GAAwB,IAH1C;MAII,KAAK,EAAGC,KAJZ;MAKI,MAAM,EAAGC;IALb,EADJ;IAUA,OACI;MAAQ,SAAS,EAAGmB;IAApB,GACMxB,IAAI,GAAG;MAAG,IAAI,EAAGA;IAAV,GAAmByB,KAAnB,CAAH,GAAoCA,KAD9C,EAEM,CAAEtC,qEAAA,CAAkBW,OAAlB,CAAF,IACE,kEAAC,qEAAD;MACI,OAAO,EAAC,YADZ;MAEI,KAAK,EAAGA;IAFZ,EAHR,CADJ;EAWH;;AAhCL,CAtKe,EAwMf;EACIqB,UAAU,EAAE9B,eADhB;;EAEIgC,IAAI,QAAmB;IAAA,IAAjB;MAAEF;IAAF,CAAiB;IACnB,MAAM;MAAE3B,GAAF;MAAOI,GAAP;MAAYE,OAAZ;MAAqBR,KAArB;MAA4BU,IAA5B;MAAkCI,KAAlC;MAAyCC,MAAzC;MAAiDF;IAAjD,IACFgB,UADJ;IAGA,MAAMM,KAAK,GACP;MACI,GAAG,EAAGjC,GADV;MAEI,GAAG,EAAGI,GAFV;MAGI,SAAS,EAAGO,EAAE,GAAI,YAAYA,EAAI,EAApB,GAAwB,IAH1C;MAII,KAAK,EAAGC,KAJZ;MAKI,MAAM,EAAGC;IALb,EADJ;IAUA,OACI;MAAQ,SAAS,EAAGf,KAAK,GAAI,QAAQA,KAAO,EAAnB,GAAuB;IAAhD,GACMU,IAAI,GAAG;MAAG,IAAI,EAAGA;IAAV,GAAmByB,KAAnB,CAAH,GAAoCA,KAD9C,EAEM,CAAEtC,qEAAA,CAAkBW,OAAlB,CAAF,IACE,kEAAC,qEAAD;MACI,OAAO,EAAC,YADZ;MAEI,KAAK,EAAGA;IAFZ,EAHR,CADJ;EAWH;;AA3BL,CAxMe,EAqOf;EACIqB,UAAU,EAAE9B,eADhB;;EAEIgC,IAAI,QAAmB;IAAA,IAAjB;MAAEF;IAAF,CAAiB;IACnB,MAAM;MAAE3B,GAAF;MAAOI,GAAP;MAAYE,OAAZ;MAAqBR,KAArB;MAA4BU,IAA5B;MAAkCI,KAAlC;MAAyCC;IAAzC,IACFc,UADJ;IAEA,MAAMS,eAAe,GAAGxB,KAAK,IAAIC,MAAT,GAAkB;MAAED,KAAF;MAASC;IAAT,CAAlB,GAAsC,EAA9D;IACA,MAAMoB,KAAK,GACP;MAAK,GAAG,EAAGjC,GAAX;MAAiB,GAAG,EAAGI;IAAvB,GAAkCgC,eAAlC,EADJ;IAIA,IAAIC,WAAW,GAAG,EAAlB;;IAEA,IAAKzB,KAAL,EAAa;MACTyB,WAAW,GAAG;QAAEzB;MAAF,CAAd;IACH,CAFD,MAEO,IAAKd,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,OAAnC,EAA6C;MAChDuC,WAAW,GAAG;QAAEC,QAAQ,EAAE;MAAZ,CAAd;IACH;;IAED,OACI;MACI,SAAS,EAAGxC,KAAK,GAAI,QAAQA,KAAO,EAAnB,GAAuB,IAD5C;MAEI,KAAK,EAAGuC;IAFZ,GAIM7B,IAAI,GAAG;MAAG,IAAI,EAAGA;IAAV,GAAmByB,KAAnB,CAAH,GAAoCA,KAJ9C,EAKM,CAAEtC,qEAAA,CAAkBW,OAAlB,CAAF,IACE,kEAAC,qEAAD;MACI,OAAO,EAAC,YADZ;MAEI,KAAK,EAAGA;IAFZ,EANR,CADJ;EAcH;;AAhCL,CArOe,CAAnB;AAyQA,iEAAeoB,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxWD;AACA;AACA;AACC;AACA;AAEA;AACD;AACA;;AACC;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACD;AACA;;AACC;AAEA;AACD;AACA;;AACC;AAQO,MAAMoC,sBAAsB,GAAG,CAAE7B,KAAF,EAAS8B,IAAT,KAAmB;EACrD,MAAMC,UAAU,GAAGtB,4CAAI,CAAET,KAAF,EAAS,CAAE,KAAF,EAAS,IAAT,EAAe,MAAf,EAAuB,SAAvB,CAAT,CAAvB;EACA+B,UAAU,CAAChE,GAAX,GACIuC,2CAAG,CAAEN,KAAF,EAAS,CAAE,OAAF,EAAW8B,IAAX,EAAiB,KAAjB,CAAT,CAAH,IACAxB,2CAAG,CAAEN,KAAF,EAAS,CAAE,eAAF,EAAmB,OAAnB,EAA4B8B,IAA5B,EAAkC,YAAlC,CAAT,CADH,IAEA9B,KAAK,CAACjC,GAHV;EAIA,OAAOgE,UAAP;AACH,CAPM;AASP;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,MAAMC,gBAAgB,GAAG,CAAEtD,EAAF,EAAMX,GAAN,KAAe,CAAEW,EAAF,IAAQiC,0DAAS,CAAE5C,GAAF,CAAzD;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,MAAMkE,eAAe,GAAG,CAAEvD,EAAF,EAAMX,GAAN,KAAeA,GAAG,IAAI,CAAEW,EAAT,IAAe,CAAEiC,0DAAS,CAAE5C,GAAF,CAAjE;AAEP;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,SAASmE,cAAT,CAAyBlC,KAAzB,EAAgCmC,WAAhC,EAA8C;EAC1C,OACI5B,2CAAG,CAAEP,KAAF,EAAS,CAAE,OAAF,EAAWmC,WAAX,EAAwB,KAAxB,CAAT,CAAH,IACA5B,2CAAG,CAAEP,KAAF,EAAS,CAAE,eAAF,EAAmB,OAAnB,EAA4BmC,WAA5B,EAAyC,YAAzC,CAAT,CAFP;AAIH;;AAEM,SAASC,SAAT,OAWH;EAAA,IAXuB;IACvB1C,UADuB;IAEvB2C,aAFuB;IAGvBC,UAHuB;IAIvBpC,SAJuB;IAKvBqC,QALuB;IAMvBC,iBANuB;IAOvBC,gBAPuB;IAQvBC,SARuB;IASvBC,OATuB;IAUvBC;EAVuB,CAWvB;EACA,MAAM;IACF7E,GAAG,GAAG,EADJ;IAEFI,GAFE;IAGFE,OAHE;IAIFR,KAJE;IAKFa,EALE;IAMFC,KANE;IAOFC,MAPE;IAQFC;EARE,IASFa,UATJ;EAUA,MAAM,CAAEmD,YAAF,EAAgBC,eAAhB,IAAoCrB,4DAAQ,EAAlD;EAEA,MAAMsB,MAAM,GAAGvB,0DAAM,EAArB;EACAD,6DAAS,CAAE,MAAM;IACbwB,MAAM,CAACC,OAAP,GAAiB7E,GAAjB;EACH,CAFQ,EAEN,CAAEA,GAAF,CAFM,CAAT;EAIA,MAAM8E,UAAU,GAAGzB,0DAAM,EAAzB;EACAD,6DAAS,CAAE,MAAM;IACb0B,UAAU,CAACD,OAAX,GAAqB3E,OAArB;EACH,CAFQ,EAEN,CAAEA,OAAF,CAFM,CAAT;EAIA,MAAM6E,GAAG,GAAG1B,0DAAM,EAAlB;EACA,MAAM;IAAE2B,gBAAF;IAAoBC;EAApB,IAAoCtC,0DAAS,CAAIuC,MAAF,IAAc;IAC/D,MAAM;MAAEC;IAAF,IAAkBD,MAAM,CAAEjC,0DAAF,CAA9B;IACA,OAAOX,4CAAI,CAAE6C,WAAW,EAAb,EAAiB,CAAE,kBAAF,EAAsB,aAAtB,CAAjB,CAAX;EACH,CAHkD,EAGhD,EAHgD,CAAnD;;EAKA,SAASC,aAAT,CAAwBC,OAAxB,EAAkC;IAC9Bf,gBAAgB,CAACgB,gBAAjB;IACAhB,gBAAgB,CAACiB,iBAAjB,CAAoCF,OAApC;IACAnB,aAAa,CAAE;MACXsB,GAAG,EAAE7D,SADM;MAEXpB,EAAE,EAAEoB,SAFO;MAGX/B,GAAG,EAAE+B;IAHM,CAAF,CAAb;IAKAgD,eAAe,CAAEhD,SAAF,CAAf;EACH;;EAED,SAAS8D,aAAT,CAAwBC,KAAxB,EAAgC;IAC5B,IAAK,CAAEA,KAAF,IAAW,CAAEA,KAAK,CAAC9F,GAAxB,EAA8B;MAC1BsE,aAAa,CAAE;QACXtE,GAAG,EAAE+B,SADM;QAEX3B,GAAG,EAAE2B,SAFM;QAGXpB,EAAE,EAAEoB,SAHO;QAIXxB,KAAK,EAAEwB,SAJI;QAKXzB,OAAO,EAAEyB;MALE,CAAF,CAAb;MAQA;IACH;;IAED,IAAKa,0DAAS,CAAEkD,KAAK,CAAC9F,GAAR,CAAd,EAA8B;MAC1B+E,eAAe,CAAEe,KAAK,CAAC9F,GAAR,CAAf;MACA;IACH;;IAED+E,eAAe;IAEf,IAAIgB,eAAe,GAAGjC,sBAAsB,CAAEgC,KAAF,EAASV,gBAAT,CAA5C,CApB4B,CAsB5B;IACA;;IACA,IAAKF,UAAU,CAACD,OAAX,IAAsB,CAAE1C,2CAAG,CAAEwD,eAAF,EAAmB,CAAE,SAAF,CAAnB,CAAhC,EAAqE;MACjEA,eAAe,GAAGtD,4CAAI,CAAEsD,eAAF,EAAmB,CAAE,SAAF,CAAnB,CAAtB;IACH;;IAED,IAAIC,oBAAJ,CA5B4B,CA6B5B;;IACA,IAAK,CAAEF,KAAK,CAACnF,EAAR,IAAcmF,KAAK,CAACnF,EAAN,KAAaA,EAAhC,EAAqC;MACjCqF,oBAAoB,GAAG;QACnBpF,KAAK,EAAEmB,SADY;QAEnBlB,MAAM,EAAEkB,SAFW;QAGnB;QACA;QACAjB,QAAQ,EAAEqD,cAAc,CAAE2B,KAAF,EAASV,gBAAT,CAAd,GACJA,gBADI,GAEJ;MAPa,CAAvB;IASH,CAVD,MAUO;MACH;MACA;MACAY,oBAAoB,GAAG;QAAEhG;MAAF,CAAvB;IACH,CA5C2B,CA8C5B;;;IACA,IAAIe,eAAe,GAAGY,UAAU,CAACZ,eAAjC;;IACA,IAAK,CAAEA,eAAP,EAAyB;MACrB;MACA;MACA;MACA,QACIkF,MAAM,EAAEC,EAAR,EAAYJ,KAAZ,EAAmBK,IAAnB,EAAyBC,QAAzB,EAAmCC,YAAnC,EAAiDC,IAAjD,IACApH,6DAFJ;QAII,KAAK,MAAL;QACA,KAAKC,8DAAL;UACI4B,eAAe,GAAG5B,8DAAlB;UACA;;QACJ,KAAK,MAAL;QACA,KAAKC,mEAAL;UACI2B,eAAe,GAAG3B,mEAAlB;UACA;;QACJ,KAAKC,+DAAL;UACI0B,eAAe,GAAG1B,+DAAlB;UACA;;QACJ,KAAKH,6DAAL;UACI6B,eAAe,GAAG7B,6DAAlB;UACA;MAjBR;IAmBH,CAvE2B,CAyE5B;;;IACA,IAAIsB,IAAJ;;IACA,QAASO,eAAT;MACI,KAAK5B,8DAAL;QACIqB,IAAI,GAAGsF,KAAK,CAAC9F,GAAb;QACA;;MACJ,KAAKZ,mEAAL;QACIoB,IAAI,GAAGsF,KAAK,CAACQ,IAAb;QACA;IANR;;IAQAP,eAAe,CAACvF,IAAhB,GAAuBA,IAAvB;IAEA8D,aAAa,CAAE,EACX,GAAGyB,eADQ;MAEX,GAAGC,oBAFQ;MAGXjF;IAHW,CAAF,CAAb;EAKH;;EAED,SAASwF,WAAT,CAAsBC,MAAtB,EAA+B;IAC3B,IAAKA,MAAM,KAAKxG,GAAhB,EAAsB;MAClBsE,aAAa,CAAE;QACXtE,GAAG,EAAEwG,MADM;QAEX7F,EAAE,EAAEoB,SAFO;QAGXnB,KAAK,EAAEmB,SAHI;QAIXlB,MAAM,EAAEkB,SAJG;QAKXjB,QAAQ,EAAEsE;MALC,CAAF,CAAb;IAOH;EACJ;;EAED,SAASqB,eAAT,CAA0BC,SAA1B,EAAsC;IAClC,MAAMC,sBAAsB,GAAG,CAAE,MAAF,EAAU,MAAV,EAAmBC,QAAnB,CAA6BF,SAA7B,IACzB;MAAE9F,KAAK,EAAEmB,SAAT;MAAoBlB,MAAM,EAAEkB;IAA5B,CADyB,GAEzB,EAFN;IAGAuC,aAAa,CAAE,EACX,GAAGqC,sBADQ;MAEX7G,KAAK,EAAE4G;IAFI,CAAF,CAAb;EAIH;;EAED,IAAIG,MAAM,GAAG5C,gBAAgB,CAAEtD,EAAF,EAAMX,GAAN,CAA7B,CA1JA,CA4JA;;EACAwD,6DAAS,CAAE,MAAM;IACb,IAAK,CAAEqD,MAAP,EAAgB;MACZ;IACH;;IAED,MAAMC,IAAI,GAAGnE,6DAAY,CAAE3C,GAAF,CAAzB;;IAEA,IAAK8G,IAAL,EAAY;MACRzB,WAAW,CAAE;QACT0B,SAAS,EAAE,CAAED,IAAF,CADF;QAETE,YAAY,EAAE,SAAe;UAAA,IAAb,CAAEC,GAAF,CAAa;UACzBpB,aAAa,CAAEoB,GAAF,CAAb;QACH,CAJQ;QAKTC,YAAY,EAAE3H,2DALL;QAMT4H,OAAO,EAAI1B,OAAF,IAAe;UACpBoB,MAAM,GAAG,KAAT;UACArB,aAAa,CAAEC,OAAF,CAAb;QACH;MATQ,CAAF,CAAX;IAWH;EACJ,CApBQ,EAoBN,EApBM,CAAT,CA7JA,CAmLA;EACA;;EACAjC,6DAAS,CAAE,MAAM;IACb,IAAKqD,MAAL,EAAc;MACV9B,eAAe,CAAE/E,GAAF,CAAf;MACA;IACH;;IACD6C,8DAAa,CAAEiC,YAAF,CAAb;EACH,CANQ,EAMN,CAAE+B,MAAF,EAAU7G,GAAV,CANM,CAAT;EAQA,MAAMoH,UAAU,GAAGlD,eAAe,CAAEvD,EAAF,EAAMX,GAAN,CAAlC;EACA,MAAM4F,GAAG,GAAGwB,UAAU,GAAGpH,GAAH,GAAS+B,SAA/B;EACA,MAAMsF,YAAY,GAAG,CAAC,CAAErH,GAAH,IACjB;IACI,GAAG,EAAG2D,mDAAE,CAAE,YAAF,CADZ;IAEI,KAAK,EAAGA,mDAAE,CAAE,YAAF,CAFd;IAGI,SAAS,EAAG,oBAHhB;IAII,GAAG,EAAG3D;EAJV,EADJ;EASA,MAAMsH,WAAW,GAAG/D,qFAAc,CAAE5B,UAAF,CAAlC;EAEA,MAAMK,OAAO,GAAGvC,yIAAU,CAAE0C,SAAF,EAAa;IACnC,gBAAgB2C,YADmB;IAEnC,cAAc,CAAC,CAAElE,KAAH,IAAY,CAAC,CAAEC,MAFM;IAGnC,CAAG,QAAQC,QAAU,EAArB,GAA0BA,QAHS;IAInC,qBACI,CAAC,CAAEwG,WAAW,CAACnF,SAAf,IAA4B,CAAEzC,+CAAO,CAAE4H,WAAW,CAACC,KAAd;EALN,CAAb,CAA1B;EAQA,MAAMC,UAAU,GAAG5H,sEAAa,CAAE;IAC9BuF,GAD8B;IAE9BhD,SAAS,EAAEH;EAFmB,CAAF,CAAhC;EAKA,OACI,4EAAawF,UAAb,EACM,CAAE1C,YAAY,IAAI9E,GAAlB,KACE,kEAAC,8CAAD;IACI,YAAY,EAAG8E,YADnB;IAEI,UAAU,EAAGnD,UAFjB;IAGI,aAAa,EAAG2C,aAHpB;IAII,UAAU,EAAGC,UAJjB;IAKI,iBAAiB,EAAGE,iBALxB;IAMI,SAAS,EAAGE,SANhB;IAOI,aAAa,EAAGkB,aAPpB;IAQI,WAAW,EAAGU,WARlB;IASI,aAAa,EAAGf,aATpB;IAUI,YAAY,EAAGL,GAVnB;IAWI,OAAO,EAAGP,OAXd;IAYI,QAAQ,EAAGC;EAZf,EAFR,EAiBM,CAAE7E,GAAF,IACE,kEAAC,kEAAD;IAAe,KAAK,EAAC;EAArB,GACI,kEAAC,0EAAD;IACI,KAAK,EAAGF,KADZ;IAEI,QAAQ,EAAG2G;EAFf,EADJ,CAlBR,EAyBI,kEAAC,qEAAD;IACI,IAAI,EAAG,kEAAC,8DAAD;MAAW,IAAI,EAAG7C,+IAAIA;IAAtB,EADX;IAEI,QAAQ,EAAGiC,aAFf;IAGI,WAAW,EAAGU,WAHlB;IAII,OAAO,EAAG/B,QAJd;IAKI,OAAO,EAAGgB,aALd;IAMI,MAAM,EAAC,SANX;IAOI,YAAY,EAAGjG,2DAPnB;IAQI,KAAK,EAAG;MAAEoB,EAAF;MAAMiF;IAAN,CARZ;IASI,YAAY,EAAGyB,YATnB;IAUI,mBAAmB,EAAGvC,YAAY,IAAI9E;EAV1C,EAzBJ,CADJ;AAwCH;AAED,iEAAe8C,kEAAW,CAAEuB,SAAF,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpWD;AACA;AACA;AACC;AAEA;AACD;AACA;;AACC;AACA;AASA;AACA;AACA;AAcA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACD;AACA;;AACC;AACA;AACA;AAEA;AACD;AACA;;AACC;AAEe,SAASR,KAAT,OAaX;EAAA,IAb2B;IAC3BiB,YAD2B;IAE3BnD,UAF2B;IAG3B2C,aAH2B;IAI3BC,UAJ2B;IAK3BE,iBAL2B;IAM3BE,SAN2B;IAO3BkB,aAP2B;IAQ3BU,WAR2B;IAS3Bf,aAT2B;IAU3BsE,YAV2B;IAW3BlF,OAX2B;IAY3BC;EAZ2B,CAa3B;EACA,MAAM;IACF7E,GAAG,GAAG,EADJ;IAEFI,GAFE;IAGFE,OAHE;IAIFR,KAJE;IAKFa,EALE;IAMFH,IANE;IAOFC,GAPE;IAQFC,SARE;IASFK,eATE;IAUFR,KAVE;IAWFK,KAXE;IAYFC,MAZE;IAaFG,UAbE;IAcFF;EAdE,IAeFa,UAfJ;EAgBA,MAAMoI,QAAQ,GAAGtG,0DAAM,EAAvB;EACA,MAAMyB,UAAU,GAAGzB,0DAAM,EAAzB;EACA,MAAMuG,OAAO,GAAG7B,+DAAW,CAAEnI,GAAF,CAA3B;EACA,MAAM;IAAEiK,WAAW,GAAG;EAAhB,IAAyBrF,OAA/B;EACA,MAAM;IAAEsF;EAAF,IAAenH,0DAAS,CAAEM,0DAAF,CAA9B;EAEA,MAAM;IAAEpB,KAAF;IAASkI;EAAT,IAAiCpH,0DAAS,CAC1CuC,MAAF,IAAc;IACV,MAAM;MAAE8E;IAAF,IAAe9E,MAAM,CAAEqE,wDAAF,CAA3B;IACA,MAAM;MAAEU,8BAAF;MAAkCC;IAAlC,IACFhF,MAAM,CAAEjC,0DAAF,CADV;IAEA,MAAMkH,sBAAsB,GAAGF,8BAA8B,EAA7D;IACA,OAAO;MACHpI,KAAK,EACDtB,EAAE,IAAI4D,UAAN,GACM6F,QAAQ,CAAEzJ,EAAF,EAAM;QAAEiE,OAAO,EAAE;MAAX,CAAN,CADd,GAEM,IAJP;MAKHuF,mBAAmB,EACfI,sBAAsB,CAACC,MAAvB,IACAD,sBAAsB,CAACE,KAAvB,CACMC,SAAF,IACIJ,YAAY,CAAEI,SAAF,CAAZ,KAA8B,YAFtC;IAPD,CAAP;EAYH,CAlB2C,EAmB5C,CAAE/J,EAAF,EAAM4D,UAAN,CAnB4C,CAAhD;EAqBA,MAAM;IAAEoG,cAAF;IAAkBC,YAAlB;IAAgCC,UAAhC;IAA4CvI,QAA5C;IAAsD+C;EAAtD,IACFtC,0DAAS,CACHuC,MAAF,IAAc;IACV,MAAM;MACFwF,oBADE;MAEFvF,WAFE;MAGFwF;IAHE,IAIFzF,MAAM,CAAEjC,0DAAF,CAJV;IAMA,MAAM2H,YAAY,GAAGF,oBAAoB,CAAEjG,QAAF,CAAzC;IACA,MAAMuB,QAAQ,GAAG1D,4CAAI,CAAE6C,WAAW,EAAb,EAAiB,CAClC,cADkC,EAElC,YAFkC,EAGlC,UAHkC,EAIlC,aAJkC,CAAjB,CAArB;IAOA,OAAO,EACH,GAAGa,QADA;MAEHuE,cAAc,EAAEI,kBAAkB,CAC9B,YAD8B,EAE9BC,YAF8B;IAF/B,CAAP;EAOH,CAvBI,EAwBL,CAAEnG,QAAF,CAxBK,CADb;EA2BA,MAAM;IAAEoG,aAAF;IAAiBC;EAAjB,IAAqC9C,4DAAW,CAAE/E,0DAAF,CAAtD;EACA,MAAM;IAAEsC,iBAAF;IAAqBwF;EAArB,IACF/C,4DAAW,CAAEsB,sDAAF,CADf;EAEA,MAAM0B,eAAe,GAAGlD,oEAAgB,CAAE,QAAF,CAAxC;EACA,MAAMmD,aAAa,GAAGzE,gDAAQ,CAAE,CAAE,MAAF,EAAU,MAAV,CAAF,EAAsB9G,KAAtB,CAA9B;EACA,MAAM,CACF;IAAEwL,kBAAF;IAAsBC;EAAtB,CADE,EAEFC,oBAFE,IAGF9H,4DAAQ,CAAE,EAAF,CAHZ;EAIA,MAAM,CAAE+H,cAAF,EAAkBC,iBAAlB,IAAwChI,4DAAQ,CAAE,KAAF,CAAtD;EACA,MAAM,CAAEiI,YAAF,EAAgBC,eAAhB,IAAoClI,4DAAQ,EAAlD;EACA,MAAMmI,WAAW,GAAGhC,iJAAc,CAAEC,YAAF,EAAgB,CAAEhK,KAAF,CAAhB,CAAlC;EACA,MAAMgM,WAAW,GAAG7B,WAAW,IAAI,EAAIoB,aAAa,IAAID,eAArB,CAAnC;EACA,MAAMW,gBAAgB,GAAGrE,2CAAG,CACxBD,8CAAM,CAAEoD,UAAF,EAAc;IAAA,IAAE;MAAEmB;IAAF,CAAF;IAAA,OAChBzJ,2CAAG,CAAEN,KAAF,EAAS,CAAE,eAAF,EAAmB,OAAnB,EAA4B+J,IAA5B,EAAkC,YAAlC,CAAT,CADa;EAAA,CAAd,CADkB,EAIxB;IAAA,IAAE;MAAEC,IAAF;MAAQD;IAAR,CAAF;IAAA,OAAwB;MAAEE,KAAK,EAAEF,IAAT;MAAeG,KAAK,EAAEF;IAAtB,CAAxB;EAAA,CAJwB,CAA5B,CApFA,CA2FA;EACA;EACA;;EACAzI,6DAAS,CAAE,MAAM;IACb,IAAK,CAAEU,uDAAe,CAAEvD,EAAF,EAAMX,GAAN,CAAjB,IAAgC,CAAEuE,UAAlC,IAAgDoH,YAArD,EAAoE;MAChE;IACH;;IAED1F,MAAM,CACDmG,KADL,CACYpM,GADZ,EAEKqM,IAFL,CAEaC,QAAF,IAAgBA,QAAQ,CAACC,IAAT,EAF3B,EAGKF,IAHL,CAGaE,IAAF,IAAYX,eAAe,CAAEW,IAAF,CAHtC,EAII;IAJJ,CAKKC,KALL,CAKY,MAAM,CAAE,CALpB;EAMH,CAXQ,EAWN,CAAE7L,EAAF,EAAMX,GAAN,EAAWuE,UAAX,EAAuBoH,YAAvB,CAXM,CAAT,CA9FA,CA2GA;EACA;EACA;EACA;;EACAnI,6DAAS,CAAE,MAAM;IACb,IAAKxD,GAAG,IAAI,CAAEgK,OAAT,IAAoBzF,UAAzB,EAAsC;MAClCW,UAAU,CAACD,OAAX,CAAmBwH,KAAnB;IACH;EACJ,CAJQ,EAIN,CAAEzM,GAAF,EAAOgK,OAAP,CAJM,CAAT,CA/GA,CAqHA;EACA;EACA;EACA;;EACA,MAAM;IAAE0C,YAAF;IAAgBC;EAAhB,IAAkC3D,2DAAO,CAAE,MAAM;IACnD,OAAO;MACH0D,YAAY,EACR3C,QAAQ,CAAC9E,OAAT,EAAkByH,YAAlB,IACApB,kBADA,IAEAvJ,SAJD;MAKH4K,aAAa,EACT5C,QAAQ,CAAC9E,OAAT,EAAkB0H,aAAlB,IACApB,mBADA,IAEAxJ;IARD,CAAP;EAUH,CAX8C,EAW5C,CACCuJ,kBADD,EAECC,mBAFD,EAGCxB,QAAQ,CAAC9E,OAAT,EAAkB2H,QAHnB,CAX4C,CAA/C;;EAiBA,SAASC,aAAT,GAAyB;IACrB3B,eAAe,CAAE,KAAF,CAAf;EACH;;EAED,SAAS4B,YAAT,GAAwB;IACpB5B,eAAe,CAAE,IAAF,CAAf;EACH;;EAED,SAAS6B,YAAT,GAAwB;IACpB;IACA;IACA,MAAMC,UAAU,GAAGpD,4IAAwB,CAAE;MAAEjI,UAAU,EAAE;QAAE3B;MAAF;IAAd,CAAF,CAA3C;;IAEA,IAAK+B,SAAS,KAAKiL,UAAnB,EAAgC;MAC5BrI,SAAS,CAAEqI,UAAF,CAAT;IACH;EACJ;;EAED,SAASC,SAAT,CAAoBC,KAApB,EAA4B;IACxB5I,aAAa,CAAE4I,KAAF,CAAb;EACH;;EAED,SAASC,UAAT,CAAqBjB,KAArB,EAA6B;IACzB;IACA;IACA5H,aAAa,CAAE;MAAE/D,KAAK,EAAE2L;IAAT,CAAF,CAAb;EACH;;EAED,SAASkB,SAAT,CAAoBC,MAApB,EAA6B;IACzB/I,aAAa,CAAE;MAAElE,GAAG,EAAEiN;IAAP,CAAF,CAAb;EACH;;EAED,SAASC,WAAT,CAAsBC,WAAtB,EAAoC;IAChC,MAAMC,MAAM,GAAGjL,2CAAG,CAAEN,KAAF,EAAS,CACvB,eADuB,EAEvB,OAFuB,EAGvBsL,WAHuB,EAIvB,YAJuB,CAAT,CAAlB;;IAMA,IAAK,CAAEC,MAAP,EAAgB;MACZ,OAAO,IAAP;IACH;;IAEDlJ,aAAa,CAAE;MACXtE,GAAG,EAAEwN,MADM;MAEX5M,KAAK,EAAEmB,SAFI;MAGXlB,MAAM,EAAEkB,SAHG;MAIXjB,QAAQ,EAAEyM;IAJC,CAAF,CAAb;EAMH;;EAED,SAASE,cAAT,GAA0B;IACtBpI,WAAW,CAAE;MACT0B,SAAS,EAAE,CAAE4E,YAAF,CADF;;MAET3E,YAAY,QAAY;QAAA,IAAV,CAAEC,GAAF,CAAU;QACpBpB,aAAa,CAAEoB,GAAF,CAAb;;QAEA,IAAKrE,0DAAS,CAAEqE,GAAG,CAACjH,GAAN,CAAd,EAA4B;UACxB;QACH;;QAED4L,eAAe;QACfT,mBAAmB,CAAExH,mDAAE,CAAE,iBAAF,CAAJ,EAA2B;UAC1C5D,IAAI,EAAE;QADoC,CAA3B,CAAnB;MAGH,CAbQ;;MAcTmH,YAAY,EAAE3H,4DAdL;;MAeT4H,OAAO,CAAE1B,OAAF,EAAY;QACfE,iBAAiB,CAAEF,OAAF,EAAW;UAAE1F,IAAI,EAAE;QAAR,CAAX,CAAjB;MACH;;IAjBQ,CAAF,CAAX;EAmBH;;EAED,SAAS0G,eAAT,CAA0BC,SAA1B,EAAsC;IAClC,MAAMC,sBAAsB,GAAG,CAAE,MAAF,EAAU,MAAV,EAAmBC,QAAnB,CAA6BF,SAA7B,IACzB;MAAE9F,KAAK,EAAEmB,SAAT;MAAoBlB,MAAM,EAAEkB;IAA5B,CADyB,GAEzB,EAFN;IAGAuC,aAAa,CAAE,EACX,GAAGqC,sBADQ;MAEX7G,KAAK,EAAE4G;IAFI,CAAF,CAAb;EAIH;;EAEDlD,6DAAS,CAAE,MAAM;IACb,IAAK,CAAEe,UAAP,EAAoB;MAChBmH,iBAAiB,CAAE,KAAF,CAAjB;IACH;EACJ,CAJQ,EAIN,CAAEnH,UAAF,CAJM,CAAT;EAMA,MAAMmJ,YAAY,GAAG/M,EAAE,IAAI+L,YAAN,IAAsBC,aAAtB,IAAuC/B,YAA5D;EACA,MAAM+C,SAAS,GAAG,CAAExD,mBAAF,IAAyBuD,YAAzB,IAAyC,CAAEjC,cAA7D;;EAEA,SAASmC,aAAT,GAAyB;IACrB3C,aAAa,CACTpG,QADS,EAETyE,oEAAiB,CAAEY,QAAQ,CAAErF,QAAF,CAAV,EAAwB,YAAxB,CAFR,CAAb;EAIH;;EAED,MAAMgJ,QAAQ,GACV,kIACI,kEAAC,kEAAD;IAAe,KAAK,EAAC;EAArB,GACI,kEAAC,0EAAD;IACI,KAAK,EAAG/N,KADZ;IAEI,QAAQ,EAAG2G;EAFf,EADJ,EAKM,CAAE0D,mBAAF,IAAyB,CAAEsB,cAA3B,IACE,kEAAC,kFAAD;IACI,GAAG,EAAGjL,IAAI,IAAI,EADlB;IAEI,WAAW,EAAGyM,SAFlB;IAGI,eAAe,EAAGlM,eAHtB;IAII,QAAQ,EAAKkB,KAAK,IAAIA,KAAK,CAAC6L,UAAjB,IAAiC9N,GAJhD;IAKI,SAAS,EAAGiC,KAAK,IAAIA,KAAK,CAACqE,IAL/B;IAMI,UAAU,EAAGtF,UANjB;IAOI,SAAS,EAAGN,SAPhB;IAQI,GAAG,EAAGD;EARV,EANR,EAiBMkN,SAAS,IACP,kEAAC,gEAAD;IACI,OAAO,EAAG,MAAMjC,iBAAiB,CAAE,IAAF,CADrC;IAEI,IAAI,EAAGnC,+IAFX;IAGI,KAAK,EAAG5F,mDAAE,CAAE,MAAF;EAHd,EAlBR,EAwBMgI,YAAY,IACV,kEAAC,gEAAD;IACI,OAAO,EAAG8B,cADd;IAEI,IAAI,EAAGhE,+IAFX;IAGI,KAAK,EAAG9F,mDAAE,CAAE,uBAAF;EAHd,EAzBR,EA+BM,CAAEwG,mBAAF,IAAyBQ,cAAzB,IACE,kEAAC,gEAAD;IACI,IAAI,EAAGnB,+IADX;IAEI,KAAK,EAAG7F,mDAAE,CAAE,qBAAF,CAFd;IAGI,OAAO,EAAGiK;EAHd,EAhCR,CADJ,EAwCM,CAAEzD,mBAAF,IAAyB,CAAEsB,cAA3B,IACE,kEAAC,kEAAD;IAAe,KAAK,EAAC;EAArB,GACI,kEAAC,qEAAD;IACI,OAAO,EAAG9K,EADd;IAEI,QAAQ,EAAGX,GAFf;IAGI,YAAY,EAAGT,4DAHnB;IAII,MAAM,EAAC,SAJX;IAKI,QAAQ,EAAGsG,aALf;IAMI,WAAW,EAAGU,WANlB;IAOI,OAAO,EAAGf;EAPd,EADJ,CAzCR,EAqDI,kEAAC,sEAAD,QACI,kEAAC,4DAAD;IAAW,KAAK,EAAG7B,mDAAE,CAAE,UAAF;EAArB,GACM,CAAEwG,mBAAF,IACE,kEAAC,kEAAD;IACI,KAAK,EAAGxG,mDAAE,CAAE,6BAAF,CADd;IAEI,KAAK,EAAGvD,GAFZ;IAGI,QAAQ,EAAGgN,SAHf;IAII,IAAI,EACA,kIACI,kEAAC,+DAAD;MAAc,IAAI,EAAC;IAAnB,GACMzJ,mDAAE,CACA,mCADA,CADR,CADJ,EAMMA,mDAAE,CACA,gDADA,CANR;EALR,EAFR,EAoBI,kEAAC,mFAAD;IACI,aAAa,EAAG2J,WADpB;IAEI,QAAQ,EAAKpB,KAAF,IAAa5H,aAAa,CAAE4H,KAAF,CAFzC;IAGI,IAAI,EAAGpL,QAHX;IAII,KAAK,EAAGF,KAJZ;IAKI,MAAM,EAAGC,MALb;IAMI,gBAAgB,EAAGkL,gBANvB;IAOI,WAAW,EAAGD,WAPlB;IAQI,UAAU,EAAGY,YARjB;IASI,WAAW,EAAGC;EATlB,EApBJ,CADJ,CArDJ,EAuFI,kEAAC,sEAAD;IAAmB,mBAAmB,EAAC;EAAvC,GACI,kEAAC,8DAAD;IACI,KAAK,EAAGhJ,mDAAE,CAAE,iBAAF,CADd;IAEI,KAAK,EAAGpD,KAAK,IAAI,EAFrB;IAGI,QAAQ,EAAG4M,UAHf;IAII,IAAI,EACA,kIACMxJ,mDAAE,CACA,8CADA,CADR,EAII,kEAAC,+DAAD;MAAc,IAAI,EAAC;IAAnB,GACMA,mDAAE,CACA,6DADA,CADR,CAJJ;EALR,EADJ,CAvFJ,CADJ;EA8GA,MAAMoK,QAAQ,GAAG5E,2DAAW,CAAEnJ,GAAF,CAA5B;EACA,IAAIgO,YAAJ;;EAEA,IAAK5N,GAAL,EAAW;IACP4N,YAAY,GAAG5N,GAAf;EACH,CAFD,MAEO,IAAK2N,QAAL,EAAgB;IACnBC,YAAY,GAAG/E,wDAAO;IAClB;IACAtF,mDAAE,CAAE,4DAAF,CAFgB,EAGlBoK,QAHkB,CAAtB;EAKH,CANM,MAMA;IACHC,YAAY,GAAGrK,mDAAE,CAAE,uCAAF,CAAjB;EACH;;EAED,MAAM2D,WAAW,GAAG/D,qFAAc,CAAE5B,UAAF,CAAlC;EACA,MAAMsM,SAAS,GAAGtM,UAAU,CAACQ,SAAX,EAAsByE,QAAtB,CAAgC,kBAAhC,CAAlB;EACA,MAAMsH,eAAe,GACjB,CAAC,CAAE5G,WAAW,CAACnF,SAAf,IAA4B,CAAEzC,+CAAO,CAAE4H,WAAW,CAACC,KAAd,CADzC;EAGA,IAAIN,GAAG,GACH;EACA;;EACA;EACA,kIACI;IACI,GAAG,EAAGnC,YAAY,IAAI9E,GAD1B;IAEI,GAAG,EAAGgO,YAFV;IAGI,OAAO,EAAG,MAAMjB,YAAY,EAHhC;IAII,MAAM,EAAKoB,KAAF,IAAa;MAClB3C,oBAAoB,CAAE;QAClBF,kBAAkB,EAAE6C,KAAK,CAACC,MAAN,EAAc1B,YADhB;QAElBnB,mBAAmB,EAAE4C,KAAK,CAACC,MAAN,EAAczB;MAFjB,CAAF,CAApB;IAIH,CATL;IAUI,GAAG,EAAG5C,QAVV;IAWI,SAAS,EAAGzC,WAAW,CAACnF,SAX5B;IAYI,KAAK,EAAGmF,WAAW,CAACC;EAZxB,EADJ,EAeMzC,YAAY,IAAI,kEAAC,0DAAD,OAftB;EAiBA;EArBJ;EAwBA,IAAIuJ,yBAAJ;EACA,IAAIC,0BAAJ;;EAEA,IAAKzC,WAAW,IAAIa,YAAf,IAA+BC,aAApC,EAAoD;IAChD,MAAM4B,cAAc,GAAG7B,YAAY,GAAGb,WAAtC;IACA,MAAM2C,KAAK,GAAG7B,aAAa,GAAGD,YAA9B;IACA2B,yBAAyB,GAAGE,cAAc,GAAG1C,WAAH,GAAiBa,YAA3D;IACA4B,0BAA0B,GAAGC,cAAc,GACrC1C,WAAW,GAAG2C,KADuB,GAErC7B,aAFN;EAGH;;EAED,IAAKe,YAAY,IAAIjC,cAArB,EAAsC;IAClCxE,GAAG,GACC,kEAAC,8EAAD;MACI,WAAW,EAAGgH,SAAS,GAAGlM,SAAH,GAAeuF,WAD1C;MAEI,GAAG,EAAGtH,GAFV;MAGI,KAAK,EAAGY,KAHZ;MAII,MAAM,EAAGC,MAJb;MAKI,WAAW,EAAGgL,WALlB;MAMI,aAAa,EAAGc,aANpB;MAOI,YAAY,EAAGD;IAPnB,EADJ;EAWH,CAZD,MAYO,IAAK,CAAEZ,WAAF,IAAiB,CAAEuC,yBAAxB,EAAoD;IACvDpH,GAAG,GAAG;MAAK,KAAK,EAAG;QAAErG,KAAF;QAASC;MAAT;IAAb,GAAmCoG,GAAnC,CAAN;EACH,CAFM,MAEA;IACH,MAAMwH,YAAY,GAAG7N,KAAK,IAAIyN,yBAA9B;IACA,MAAMK,aAAa,GAAG7N,MAAM,IAAIyN,0BAAhC;IAEA,MAAME,KAAK,GAAG9B,YAAY,GAAGC,aAA7B;IACA,MAAMgC,QAAQ,GACVjC,YAAY,GAAGC,aAAf,GAA+B1N,iDAA/B,GAA0CA,iDAAQ,GAAGuP,KADzD;IAEA,MAAMI,SAAS,GACXjC,aAAa,GAAGD,YAAhB,GAA+BzN,iDAA/B,GAA0CA,iDAAQ,GAAGuP,KADzD,CAPG,CAUH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,MAAMK,cAAc,GAAGvM,QAAQ,GAAG,GAAlC;IAEA,IAAIwM,eAAe,GAAG,KAAtB;IACA,IAAIC,cAAc,GAAG,KAArB;IAEA;IACA;;IACA,IAAKjP,KAAK,KAAK,QAAf,EAA0B;MACtB;MACAgP,eAAe,GAAG,IAAlB;MACAC,cAAc,GAAG,IAAjB;IACH,CAJD,MAIO,IAAK7F,sDAAK,EAAV,EAAe;MAClB;MACA;MACA;MACA,IAAKpJ,KAAK,KAAK,MAAf,EAAwB;QACpBgP,eAAe,GAAG,IAAlB;MACH,CAFD,MAEO;QACHC,cAAc,GAAG,IAAjB;MACH;IACJ,CATM,MASA;MACH;MACA;MACA,IAAKjP,KAAK,KAAK,OAAf,EAAyB;QACrBiP,cAAc,GAAG,IAAjB;MACH,CAFD,MAEO;QACHD,eAAe,GAAG,IAAlB;MACH;IACJ;IACD;;;IAEA7H,GAAG,GACC,kEAAC,+DAAD;MACI,IAAI,EAAG;QACHrG,KAAK,EAAEA,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAW,MADb;QAEHC,MAAM,EAAEA,MAAM,IAAI,CAAEqN,eAAZ,GAA8BrN,MAA9B,GAAuC;MAF5C,CADX;MAKI,UAAU,EAAG0D,UALjB;MAMI,QAAQ,EAAGoK,QANf;MAOI,QAAQ,EAAGE,cAPf;MAQI,SAAS,EAAGD,SARhB;MASI,SAAS,EAAGC,cAAc,GAAGL,KATjC;MAUI,eAAe,MAVnB;MAWI,MAAM,EAAG;QACLQ,GAAG,EAAE,KADA;QAELC,KAAK,EAAEH,eAFF;QAGLI,MAAM,EAAE,IAHH;QAILC,IAAI,EAAEJ;MAJD,CAXb;MAiBI,aAAa,EAAGlC,aAjBpB;MAkBI,YAAY,EAAG,CAAEsB,KAAF,EAASiB,SAAT,EAAoBC,GAApB,EAAyBC,KAAzB,KAAoC;QAC/CxC,YAAY;QACZxI,aAAa,CAAE;UACX1D,KAAK,EAAE2O,QAAQ,CAAEd,YAAY,GAAGa,KAAK,CAAC1O,KAAvB,EAA8B,EAA9B,CADJ;UAEXC,MAAM,EAAE0O,QAAQ,CAAEb,aAAa,GAAGY,KAAK,CAACzO,MAAxB,EAAgC,EAAhC;QAFL,CAAF,CAAb;MAIH;IAxBL,GA0BMoG,GA1BN,CADJ;EA8BH;;EAED,OACI,kEAAC,uFAAD;IACI,EAAE,EAAGtG,EADT;IAEI,GAAG,EAAGX,GAFV;IAGI,YAAY,EAAG0M,YAHnB;IAII,aAAa,EAAGC,aAJpB;IAKI,WAAW,EAAGd,WALlB;IAMI,WAAW,EAAK2D,eAAF,IACVlL,aAAa,CAAEkL,eAAF,CAPrB;IASI,SAAS,EAAG/D,cAThB;IAUI,eAAe,EAAG,MAAMC,iBAAiB,CAAE,KAAF;EAV7C,GAcM,CAAE5G,YAAF,IAAkB+I,QAdxB,EAeM5G,GAfN,EAgBM,CAAE,CAAEtH,qEAAA,CAAkBW,OAAlB,CAAF,IAAiCiE,UAAnC,KACE,kEAAC,6DAAD;IACI,SAAS,EAAGwE,0FAAiC,CAAE,SAAF,CADjD;IAEI,GAAG,EAAG7D,UAFV;IAGI,OAAO,EAAC,YAHZ;IAII,cAAavB,mDAAE,CAAE,oBAAF,CAJnB;IAKI,WAAW,EAAGA,mDAAE,CAAE,aAAF,CALpB;IAMI,KAAK,EAAGrD,OANZ;IAOI,QAAQ,EAAK4L,KAAF,IACP5H,aAAa,CAAE;MAAEhE,OAAO,EAAE4L;IAAX,CAAF,CARrB;IAUI,aAAa,MAVjB;IAWI,sBAAsB,EAAG,MACrBzH,iBAAiB,CACb2E,8DAAW,CAAEC,sEAAmB,EAArB,CADE;EAZzB,EAjBR,CADJ;AAsCH;;;;;;;;;;;;;;;;;;;;;;;AChmBF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAOe,SAASxH,IAAT,OAAgC;EAAA,IAAjB;IAAEF;EAAF,CAAiB;EAC9C,MAAM;IACL3B,GADK;IAELI,GAFK;IAGLE,OAHK;IAILR,KAJK;IAKLU,IALK;IAMLC,GANK;IAOLC,SAPK;IAQLE,KARK;IASLC,MATK;IAULF,EAVK;IAWLK,UAXK;IAYLF,QAZK;IAaLP;EAbK,IAcFoB,UAdJ;EAgBA,MAAMG,MAAM,GAAGpC,+CAAO,CAAEe,GAAF,CAAP,GAAiBsB,SAAjB,GAA6BtB,GAA5C;EACA,MAAM6G,WAAW,GAAGoI,gGAAyB,CAAE/N,UAAF,CAA7C;EAEA,MAAMK,OAAO,GAAGvC,yIAAU,CAAE;IAC3B,CAAG,QAAQK,KAAO,EAAlB,GAAuBA,KADI;IAE3B,CAAG,QAAQgB,QAAU,EAArB,GAA0BA,QAFC;IAG3B,cAAcF,KAAK,IAAIC,MAHI;IAI3B,qBACC,CAAC,CAAEyG,WAAW,CAACnF,SAAf,IAA4B,CAAEzC,+CAAO,CAAE4H,WAAW,CAACC,KAAd;EALX,CAAF,CAA1B;EAQA,MAAMoI,YAAY,GAAGlQ,yIAAU,CAAE6H,WAAW,CAACnF,SAAd,EAAyB;IACvD,CAAG,YAAYxB,EAAI,EAAnB,GAAwB,CAAC,CAAEA;EAD4B,CAAzB,CAA/B;EAIA,MAAMsB,KAAK,GACV;IACC,GAAG,EAAGjC,GADP;IAEC,GAAG,EAAGI,GAFP;IAGC,SAAS,EAAGuP,YAAY,IAAI5N,SAH7B;IAIC,KAAK,EAAGuF,WAAW,CAACC,KAJrB;IAKC,KAAK,EAAG3G,KALT;IAMC,MAAM,EAAGC,MANV;IAOC,KAAK,EAAGN;EAPT,EADD;EAYA,MAAM2B,MAAM,GACX,kIACG1B,IAAI,GACL;IACC,SAAS,EAAGE,SADb;IAEC,IAAI,EAAGF,IAFR;IAGC,MAAM,EAAGQ,UAHV;IAIC,GAAG,EAAGc;EAJP,GAMGG,KANH,CADK,GAULA,KAXF,EAaG,CAAEtC,qEAAA,CAAkBW,OAAlB,CAAF,IACD,kEAAC,qEAAD;IACC,SAAS,EAAGyI,0FAAiC,CAAE,SAAF,CAD9C;IAEC,OAAO,EAAC,YAFT;IAGC,KAAK,EAAGzI;EAHT,EAdF,CADD;EAwBA,OACC,4EAAaV,uEAAA,CAAoB;IAAEuC,SAAS,EAAEH;EAAb,CAApB,CAAb,EACGE,MADH,CADD;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFD;AACA;AACA;AACC;AAEA;AACD;AACA;;AACC;AACA;AACA;AACA;AACA;AAEO,SAAS6N,eAAT,CAA0BpO,UAA1B,QAAsD;EAAA,IAAhB;IAAEqO;EAAF,CAAgB;EACzD,MAAM;IAAEC;EAAF,IAAWC,QAAQ,CAACC,cAAT,CAAwBC,kBAAxB,CAA4C,EAA5C,CAAjB;EAEAH,IAAI,CAACI,SAAL,GAAiBL,SAAS,CAACM,OAA3B;EAEA,IAAIC,YAAY,GAAGN,IAAI,CAACO,aAAL,CAAoB,KAApB,CAAnB,CALyD,CAOzD;;EACA,OACID,YAAY,IACZA,YAAY,CAACE,UADb,IAEAF,YAAY,CAACE,UAAb,KAA4BR,IAHhC,EAIE;IACEM,YAAY,GAAGA,YAAY,CAACE,UAA5B;EACH;;EAED,IAAKF,YAAL,EAAoB;IAChBA,YAAY,CAACE,UAAb,CAAwBC,WAAxB,CAAqCH,YAArC;EACH;;EAED,OAAON,IAAI,CAACI,SAAL,CAAeM,IAAf,EAAP;AACH;;AAED,SAASC,+BAAT,CAA0CC,IAA1C,EAAgDC,aAAhD,EAAgE;EAC5D,MAAM;IAAEb;EAAF,IAAWC,QAAQ,CAACC,cAAT,CAAwBC,kBAAxB,CAA4C,EAA5C,CAAjB;EAEAH,IAAI,CAACI,SAAL,GAAiBQ,IAAjB;EAEA,MAAM;IAAEE;EAAF,IAAwBd,IAA9B;;EAEA,IAAKc,iBAAiB,IAAIA,iBAAiB,CAACC,QAAlB,KAA+B,GAAzD,EAA+D;IAC3D,OAAOD,iBAAiB,CAACE,YAAlB,CAAgCH,aAAhC,KAAmD/O,SAA1D;EACH;AACJ;;AAED,MAAMmP,WAAW,GAAG;EAChBjK,GAAG,EAAE;IACDtF,UAAU,EAAE,CAAE,KAAF,EAAS,KAAT,EAAgB,OAAhB,CADX;IAEDK,OAAO,EAAE,CACL,WADK,EAEL,aAFK,EAGL,YAHK,EAIL,WAJK,EAKL,gBALK;EAFR;AADW,CAApB;;AAaA,MAAMmP,MAAM,GAAG;EAAA,IAAE;IAAEC;EAAF,CAAF;EAAA,OAAmC;IAC9ClP,MAAM,EAAE;MACJmP,OAAO,EAAE,CAAE,KAAF,CADL;MAEJC,QAAQ,EAAE,EACN,GAAGJ,WADG;QAENK,CAAC,EAAE;UACC5P,UAAU,EAAE,CAAE,MAAF,EAAU,KAAV,EAAiB,QAAjB,CADb;UAEC2P,QAAQ,EAAEJ;QAFX,CAFG;QAMNM,UAAU,EAAE;UACRF,QAAQ,EAAEF;QADF;MANN;IAFN;EADsC,CAAnC;AAAA,CAAf;;AAgBA,MAAMK,UAAU,GAAG;EACfC,IAAI,EAAE,CACF;IACI3R,IAAI,EAAE,KADV;IAEI4R,OAAO,EAAIC,IAAF,IACLA,IAAI,CAACZ,QAAL,KAAkB,QAAlB,IAA8B,CAAC,CAAEY,IAAI,CAACpB,aAAL,CAAoB,KAApB,CAHzC;IAIIW,MAJJ;IAKIU,SAAS,EAAID,IAAF,IAAY;MACnB;MACA;MACA,MAAMzP,SAAS,GACXyP,IAAI,CAACzP,SAAL,GACA,GADA,GAEAyP,IAAI,CAACpB,aAAL,CAAoB,KAApB,EAA4BrO,SAHhC;MAIA,MAAM2P,YAAY,GACd,2CAA2CC,IAA3C,CACI5P,SADJ,CADJ;MAIA,MAAMjB,MAAM,GAAG0Q,IAAI,CAACjR,EAAL,KAAY,EAAZ,GAAiBoB,SAAjB,GAA6B6P,IAAI,CAACjR,EAAjD;MACA,MAAMb,KAAK,GAAGgS,YAAY,GAAGA,YAAY,CAAE,CAAF,CAAf,GAAuB/P,SAAjD;MACA,MAAMiQ,SAAS,GAAG,iCAAiCD,IAAjC,CACd5P,SADc,CAAlB;MAGA,MAAMxB,EAAE,GAAGqR,SAAS,GAAGC,MAAM,CAAED,SAAS,CAAE,CAAF,CAAX,CAAT,GAA8BjQ,SAAlD;MACA,MAAMmQ,aAAa,GAAGN,IAAI,CAACpB,aAAL,CAAoB,GAApB,CAAtB;MACA,MAAMzP,eAAe,GACjBmR,aAAa,IAAIA,aAAa,CAAC1R,IAA/B,GAAsC,QAAtC,GAAiDuB,SADrD;MAEA,MAAMvB,IAAI,GACN0R,aAAa,IAAIA,aAAa,CAAC1R,IAA/B,GACM0R,aAAa,CAAC1R,IADpB,GAEMuB,SAHV;MAIA,MAAMtB,GAAG,GACLyR,aAAa,IAAIA,aAAa,CAACzR,GAA/B,GACMyR,aAAa,CAACzR,GADpB,GAEMsB,SAHV;MAIA,MAAMrB,SAAS,GACXwR,aAAa,IAAIA,aAAa,CAAC/P,SAA/B,GACM+P,aAAa,CAAC/P,SADpB,GAEMJ,SAHV;MAIA,MAAMJ,UAAU,GAAGkO,qEAAkB,CACjC,YADiC,EAEjC+B,IAAI,CAACO,SAF4B,EAGjC;QACIrS,KADJ;QAEIa,EAFJ;QAGII,eAHJ;QAIIP,IAJJ;QAKIC,GALJ;QAMIC,SANJ;QAOIQ;MAPJ,CAHiC,CAArC;MAaA,OAAOkI,8DAAW,CAAE,YAAF,EAAgBzH,UAAhB,CAAlB;IACH;EAnDL,CADE,EAsDF;IACI;IACA;IACA;IACA5B,IAAI,EAAE,OAJV;;IAKI4R,OAAO,CAAES,KAAF,EAAU;MACb;MACA,IACIA,KAAK,CAACC,IAAN,CACMvL,IAAF,IAAYA,IAAI,CAAC/G,IAAL,CAAUuS,OAAV,CAAmB,QAAnB,MAAkC,CADlD,KAGAF,KAAK,CAACC,IAAN,CACMvL,IAAF,IAAYA,IAAI,CAAC/G,IAAL,CAAUuS,OAAV,CAAmB,QAAnB,MAAkC,CADlD,CAJJ,EAOE;QACE,MAAM;UAAE3M;QAAF,IAAwBmK,yDAAQ,CAAEpG,qDAAF,CAAtC;QACA/D,iBAAiB,CACbhC,mDAAE,CACE,8DADF,CADW,EAIb;UAAEhD,EAAE,EAAE;QAAN,CAJa,CAAjB;MAMH;;MACD,OAAO8J,6CAAK,CACR2H,KADQ,EAENtL,IAAF,IAAYA,IAAI,CAAC/G,IAAL,CAAUuS,OAAV,CAAmB,QAAnB,MAAkC,CAFtC,CAAZ;IAIH,CA3BL;;IA4BIT,SAAS,CAAEO,KAAF,EAAU;MACf,MAAMG,MAAM,GAAGH,KAAK,CAAC1K,GAAN,CAAaZ,IAAF,IAAY;QAClC,OAAOsC,8DAAW,CAAE,YAAF,EAAgB;UAC9BpJ,GAAG,EAAE4P,8DAAa,CAAE9I,IAAF;QADY,CAAhB,CAAlB;MAGH,CAJc,CAAf;MAKA,OAAOyL,MAAP;IACH;;EAnCL,CAtDE,EA2FF;IACIxS,IAAI,EAAE,WADV;IAEIyS,GAAG,EAAE,SAFT;IAGI7Q,UAAU,EAAE;MACR3B,GAAG,EAAE;QACDD,IAAI,EAAE,QADL;QAEDE,MAAM,EAAE,WAFP;QAGDE,SAAS,EAAE,KAHV;QAIDD,QAAQ,EAAE;MAJT,CADG;MAORE,GAAG,EAAE;QACDL,IAAI,EAAE,QADL;QAEDE,MAAM,EAAE,WAFP;QAGDE,SAAS,EAAE,KAHV;QAIDD,QAAQ,EAAE;MAJT,CAPG;MAaRI,OAAO,EAAE;QACL0P,SAAS,EAAED;MADN,CAbD;MAgBRvP,IAAI,EAAE;QACFwP,SAAS,EAAE,CAAErO,UAAF,YAAiC;UAAA,IAAnB;YAAEqO;UAAF,CAAmB;UACxC,OAAOY,+BAA+B,CAClCZ,SAAS,CAACM,OADwB,EAElC,MAFkC,CAAtC;QAIH;MANC,CAhBE;MAwBR7P,GAAG,EAAE;QACDuP,SAAS,EAAE,CAAErO,UAAF,YAAiC;UAAA,IAAnB;YAAEqO;UAAF,CAAmB;UACxC,OAAOY,+BAA+B,CAClCZ,SAAS,CAACM,OADwB,EAElC,KAFkC,CAAtC;QAIH;MANA,CAxBG;MAgCR5P,SAAS,EAAE;QACPsP,SAAS,EAAE,CAAErO,UAAF,YAAiC;UAAA,IAAnB;YAAEqO;UAAF,CAAmB;UACxC,OAAOY,+BAA+B,CAClCZ,SAAS,CAACM,OADwB,EAElC,OAFkC,CAAtC;QAIH;MANM,CAhCH;MAwCR3P,EAAE,EAAE;QACAZ,IAAI,EAAE,QADN;QAEAiQ,SAAS,EAAE,SAAyB;UAAA,IAAvB;YAAEyC,KAAK,EAAE;cAAE9R;YAAF;UAAT,CAAuB;;UAChC,IAAK,CAAEA,EAAP,EAAY;YACR;UACH;;UAED,OAAO4O,QAAQ,CAAE5O,EAAE,CAAC+R,OAAH,CAAY,aAAZ,EAA2B,EAA3B,CAAF,EAAmC,EAAnC,CAAf;QACH;MARD,CAxCI;MAkDR5S,KAAK,EAAE;QACHC,IAAI,EAAE,QADH;QAEHiQ,SAAS,EAAE,SAA0C;UAAA,IAAxC;YAAEyC,KAAK,EAAE;cAAE3S,KAAK,GAAG;YAAV;UAAT,CAAwC;UACjD,OAAOA,KAAK,CAAC4S,OAAN,CAAe,OAAf,EAAwB,EAAxB,CAAP;QACH;MAJE;IAlDC;EAHhB,CA3FE;AADS,CAAnB;AA4JA,iEAAejB,UAAf;;;;;;;;;;AC1OD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAe;AACf;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACC;AACA;AAEA;AACD;AACA;;AACC;AACA;AACA;AACA;AACA;AAEA,MAAM;EAAExF;AAAF,IAAW2G,wCAAjB;AAEA;AAEO,MAAMxM,QAAQ,GAAG;EACpBxC,IADoB;EAEpBiP,OAAO,EAAE;IACLlR,UAAU,EAAE;MACRb,QAAQ,EAAE,OADF;MAERd,GAAG,EAAE,8CAFG;MAGR;MACAM,OAAO,EAAEqD,mDAAE,CAAE,8CAAF;IAJH;EADP,CAFW;;EAUpBmP,mBAAmB,CAAEnR,UAAF,QAA4B;IAAA,IAAd;MAAEiD;IAAF,CAAc;;IAC3C,IAAKA,OAAO,KAAK,eAAjB,EAAmC;MAC/B,MAAM;QAAEtE,OAAF;QAAWF,GAAX;QAAgBJ;MAAhB,IAAwB2B,UAA9B;;MAEA,IAAK,CAAE3B,GAAP,EAAa;QACT,OAAO2D,mDAAE,CAAE,OAAF,CAAT;MACH;;MAED,IAAK,CAAEvD,GAAP,EAAa;QACT,OAAOE,OAAO,IAAI,EAAlB;MACH,CAT8B,CAW/B;MACA;;;MACA,OAAOF,GAAG,IAAKE,OAAO,GAAG,OAAOA,OAAV,GAAoB,EAAhC,CAAV;IACH;EACJ,CA1BmB;;EA2BpByS,mBAAmB,CAAEpR,UAAF,EAAe;IAC9B,OAAO;MACH,cAAcA,UAAU,CAAC7B;IADtB,CAAP;EAGH,CA/BmB;;EAgCpB2R,UAhCoB;EAiCpBkB,IAjCoB;EAkCpB9Q,IAlCoB;EAmCpBH,UAAUA,qDAAAA;AAnCU,CAAjB,C","sources":["webpack://study-logo-block/./src/constants.js","webpack://study-logo-block/./src/deprecated.js","webpack://study-logo-block/./src/edit.js","webpack://study-logo-block/./src/image.js","webpack://study-logo-block/./src/save.js","webpack://study-logo-block/./src/transforms.js","webpack://study-logo-block/external window \"lodash\"","webpack://study-logo-block/external window [\"wp\",\"blob\"]","webpack://study-logo-block/external window [\"wp\",\"blockEditor\"]","webpack://study-logo-block/external window [\"wp\",\"blocks\"]","webpack://study-logo-block/external window [\"wp\",\"components\"]","webpack://study-logo-block/external window [\"wp\",\"compose\"]","webpack://study-logo-block/external window [\"wp\",\"coreData\"]","webpack://study-logo-block/external window [\"wp\",\"data\"]","webpack://study-logo-block/external window [\"wp\",\"element\"]","webpack://study-logo-block/external window [\"wp\",\"i18n\"]","webpack://study-logo-block/external window [\"wp\",\"notices\"]","webpack://study-logo-block/external window [\"wp\",\"url\"]","webpack://study-logo-block/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://study-logo-block/webpack/bootstrap","webpack://study-logo-block/webpack/runtime/compat get default export","webpack://study-logo-block/webpack/runtime/define property getters","webpack://study-logo-block/webpack/runtime/hasOwnProperty shorthand","webpack://study-logo-block/webpack/runtime/make namespace object","webpack://study-logo-block/./src/index.js"],"sourcesContent":["export const MIN_SIZE = 20;\r\nexport const LINK_DESTINATION_NONE = 'none';\r\nexport const LINK_DESTINATION_MEDIA = 'media';\r\nexport const LINK_DESTINATION_ATTACHMENT = 'attachment';\r\nexport const LINK_DESTINATION_CUSTOM = 'custom';\r\nexport const NEW_TAB_REL = [ 'noreferrer', 'noopener' ];\r\nexport const ALLOWED_MEDIA_TYPES = [ 'image' ];\r\nexport const MEDIA_ID_NO_FEATURED_IMAGE_SET = 0;","/**\r\n * External dependencies\r\n */\r\n import classnames from 'classnames';\r\n import { isEmpty } from 'lodash';\r\n \r\n /**\r\n  * WordPress dependencies\r\n  */\r\n import { RichText, useBlockProps } from '@wordpress/block-editor';\r\n \r\n const blockAttributes = {\r\n     align: {\r\n         type: 'string',\r\n     },\r\n     url: {\r\n         type: 'string',\r\n         source: 'attribute',\r\n         selector: 'img',\r\n         attribute: 'src',\r\n     },\r\n     alt: {\r\n         type: 'string',\r\n         source: 'attribute',\r\n         selector: 'img',\r\n         attribute: 'alt',\r\n         default: '',\r\n     },\r\n     caption: {\r\n         type: 'string',\r\n         source: 'html',\r\n         selector: 'figcaption',\r\n     },\r\n     title: {\r\n         type: 'string',\r\n         source: 'attribute',\r\n         selector: 'img',\r\n         attribute: 'title',\r\n     },\r\n     href: {\r\n         type: 'string',\r\n         source: 'attribute',\r\n         selector: 'figure > a',\r\n         attribute: 'href',\r\n     },\r\n     rel: {\r\n         type: 'string',\r\n         source: 'attribute',\r\n         selector: 'figure > a',\r\n         attribute: 'rel',\r\n     },\r\n     linkClass: {\r\n         type: 'string',\r\n         source: 'attribute',\r\n         selector: 'figure > a',\r\n         attribute: 'class',\r\n     },\r\n     id: {\r\n         type: 'number',\r\n     },\r\n     width: {\r\n         type: 'number',\r\n     },\r\n     height: {\r\n         type: 'number',\r\n     },\r\n     sizeSlug: {\r\n         type: 'string',\r\n     },\r\n     linkDestination: {\r\n         type: 'string',\r\n     },\r\n     linkTarget: {\r\n         type: 'string',\r\n         source: 'attribute',\r\n         selector: 'figure > a',\r\n         attribute: 'target',\r\n     },\r\n };\r\n \r\n const blockSupports = {\r\n     anchor: true,\r\n     color: {\r\n         __experimentalDuotone: 'img',\r\n         text: false,\r\n         background: false,\r\n     },\r\n     __experimentalBorder: {\r\n         radius: true,\r\n         __experimentalDefaultControls: {\r\n             radius: true,\r\n         },\r\n     },\r\n };\r\n \r\n const deprecated = [\r\n     // The following deprecation moves existing border radius styles onto the\r\n     // inner img element where new border block support styles must be applied.\r\n     // It will also add a new `.has-custom-border` class for existing blocks\r\n     // with border radii set. This class is required to improve caption position\r\n     // and styling when an image within a gallery has a custom border or\r\n     // rounded corners.\r\n     //\r\n     // See: https://github.com/WordPress/gutenberg/pull/31366/\r\n     {\r\n         attributes: blockAttributes,\r\n         supports: blockSupports,\r\n         save( { attributes } ) {\r\n             const {\r\n                 url,\r\n                 alt,\r\n                 caption,\r\n                 align,\r\n                 href,\r\n                 rel,\r\n                 linkClass,\r\n                 width,\r\n                 height,\r\n                 id,\r\n                 linkTarget,\r\n                 sizeSlug,\r\n                 title,\r\n             } = attributes;\r\n \r\n             const newRel = isEmpty( rel ) ? undefined : rel;\r\n \r\n             const classes = classnames( {\r\n                 [ `align${ align }` ]: align,\r\n                 [ `size-${ sizeSlug }` ]: sizeSlug,\r\n                 'is-resized': width || height,\r\n             } );\r\n \r\n             const image = (\r\n                 <img\r\n                     src={ url }\r\n                     alt={ alt }\r\n                     className={ id ? `wp-image-${ id }` : null }\r\n                     width={ width }\r\n                     height={ height }\r\n                     title={ title }\r\n                 />\r\n             );\r\n \r\n             const figure = (\r\n                 <>\r\n                     { href ? (\r\n                         <a\r\n                             className={ linkClass }\r\n                             href={ href }\r\n                             target={ linkTarget }\r\n                             rel={ newRel }\r\n                         >\r\n                             { image }\r\n                         </a>\r\n                     ) : (\r\n                         image\r\n                     ) }\r\n                     { ! RichText.isEmpty( caption ) && (\r\n                         <RichText.Content\r\n                             tagName=\"figcaption\"\r\n                             value={ caption }\r\n                         />\r\n                     ) }\r\n                 </>\r\n             );\r\n \r\n             return (\r\n                 <figure { ...useBlockProps.save( { className: classes } ) }>\r\n                     { figure }\r\n                 </figure>\r\n             );\r\n         },\r\n     },\r\n     {\r\n         attributes: {\r\n             ...blockAttributes,\r\n             title: {\r\n                 type: 'string',\r\n                 source: 'attribute',\r\n                 selector: 'img',\r\n                 attribute: 'title',\r\n             },\r\n             sizeSlug: {\r\n                 type: 'string',\r\n             },\r\n         },\r\n         supports: blockSupports,\r\n         save( { attributes } ) {\r\n             const {\r\n                 url,\r\n                 alt,\r\n                 caption,\r\n                 align,\r\n                 href,\r\n                 rel,\r\n                 linkClass,\r\n                 width,\r\n                 height,\r\n                 id,\r\n                 linkTarget,\r\n                 sizeSlug,\r\n                 title,\r\n             } = attributes;\r\n \r\n             const newRel = isEmpty( rel ) ? undefined : rel;\r\n \r\n             const classes = classnames( {\r\n                 [ `align${ align }` ]: align,\r\n                 [ `size-${ sizeSlug }` ]: sizeSlug,\r\n                 'is-resized': width || height,\r\n             } );\r\n \r\n             const image = (\r\n                 <img\r\n                     src={ url }\r\n                     alt={ alt }\r\n                     className={ id ? `wp-image-${ id }` : null }\r\n                     width={ width }\r\n                     height={ height }\r\n                     title={ title }\r\n                 />\r\n             );\r\n \r\n             const figure = (\r\n                 <>\r\n                     { href ? (\r\n                         <a\r\n                             className={ linkClass }\r\n                             href={ href }\r\n                             target={ linkTarget }\r\n                             rel={ newRel }\r\n                         >\r\n                             { image }\r\n                         </a>\r\n                     ) : (\r\n                         image\r\n                     ) }\r\n                     { ! RichText.isEmpty( caption ) && (\r\n                         <RichText.Content\r\n                             tagName=\"figcaption\"\r\n                             value={ caption }\r\n                         />\r\n                     ) }\r\n                 </>\r\n             );\r\n \r\n             if ( 'left' === align || 'right' === align || 'center' === align ) {\r\n                 return (\r\n                     <div { ...useBlockProps.save() }>\r\n                         <figure className={ classes }>{ figure }</figure>\r\n                     </div>\r\n                 );\r\n             }\r\n \r\n             return (\r\n                 <figure { ...useBlockProps.save( { className: classes } ) }>\r\n                     { figure }\r\n                 </figure>\r\n             );\r\n         },\r\n     },\r\n     {\r\n         attributes: blockAttributes,\r\n         save( { attributes } ) {\r\n             const { url, alt, caption, align, href, width, height, id } =\r\n                 attributes;\r\n \r\n             const classes = classnames( {\r\n                 [ `align${ align }` ]: align,\r\n                 'is-resized': width || height,\r\n             } );\r\n \r\n             const image = (\r\n                 <img\r\n                     src={ url }\r\n                     alt={ alt }\r\n                     className={ id ? `wp-image-${ id }` : null }\r\n                     width={ width }\r\n                     height={ height }\r\n                 />\r\n             );\r\n \r\n             return (\r\n                 <figure className={ classes }>\r\n                     { href ? <a href={ href }>{ image }</a> : image }\r\n                     { ! RichText.isEmpty( caption ) && (\r\n                         <RichText.Content\r\n                             tagName=\"figcaption\"\r\n                             value={ caption }\r\n                         />\r\n                     ) }\r\n                 </figure>\r\n             );\r\n         },\r\n     },\r\n     {\r\n         attributes: blockAttributes,\r\n         save( { attributes } ) {\r\n             const { url, alt, caption, align, href, width, height, id } =\r\n                 attributes;\r\n \r\n             const image = (\r\n                 <img\r\n                     src={ url }\r\n                     alt={ alt }\r\n                     className={ id ? `wp-image-${ id }` : null }\r\n                     width={ width }\r\n                     height={ height }\r\n                 />\r\n             );\r\n \r\n             return (\r\n                 <figure className={ align ? `align${ align }` : null }>\r\n                     { href ? <a href={ href }>{ image }</a> : image }\r\n                     { ! RichText.isEmpty( caption ) && (\r\n                         <RichText.Content\r\n                             tagName=\"figcaption\"\r\n                             value={ caption }\r\n                         />\r\n                     ) }\r\n                 </figure>\r\n             );\r\n         },\r\n     },\r\n     {\r\n         attributes: blockAttributes,\r\n         save( { attributes } ) {\r\n             const { url, alt, caption, align, href, width, height } =\r\n                 attributes;\r\n             const extraImageProps = width || height ? { width, height } : {};\r\n             const image = (\r\n                 <img src={ url } alt={ alt } { ...extraImageProps } />\r\n             );\r\n \r\n             let figureStyle = {};\r\n \r\n             if ( width ) {\r\n                 figureStyle = { width };\r\n             } else if ( align === 'left' || align === 'right' ) {\r\n                 figureStyle = { maxWidth: '50%' };\r\n             }\r\n \r\n             return (\r\n                 <figure\r\n                     className={ align ? `align${ align }` : null }\r\n                     style={ figureStyle }\r\n                 >\r\n                     { href ? <a href={ href }>{ image }</a> : image }\r\n                     { ! RichText.isEmpty( caption ) && (\r\n                         <RichText.Content\r\n                             tagName=\"figcaption\"\r\n                             value={ caption }\r\n                         />\r\n                     ) }\r\n                 </figure>\r\n             );\r\n         },\r\n     },\r\n ];\r\n \r\n export default deprecated;","/**\r\n * External dependencies\r\n */\r\n import classnames from 'classnames';\r\n import { get, has, isEmpty, omit, pick } from 'lodash';\r\n \r\n /**\r\n  * WordPress dependencies\r\n  */\r\n import { getBlobByURL, isBlobURL, revokeBlobURL } from '@wordpress/blob';\r\n import { withNotices } from '@wordpress/components';\r\n import { useSelect } from '@wordpress/data';\r\n import {\r\n     BlockAlignmentControl,\r\n     BlockControls,\r\n     BlockIcon,\r\n     MediaPlaceholder,\r\n     useBlockProps,\r\n     store as blockEditorStore,\r\n     __experimentalUseBorderProps as useBorderProps,\r\n } from '@wordpress/block-editor';\r\n import { useEffect, useRef, useState } from '@wordpress/element';\r\n import { __ } from '@wordpress/i18n';\r\n import { image as icon } from '@wordpress/icons';\r\n \r\n /**\r\n  * Internal dependencies\r\n  */\r\n import Image from './image';\r\n \r\n /**\r\n  * Module constants\r\n  */\r\n import {\r\n     LINK_DESTINATION_ATTACHMENT,\r\n     LINK_DESTINATION_CUSTOM,\r\n     LINK_DESTINATION_MEDIA,\r\n     LINK_DESTINATION_NONE,\r\n     ALLOWED_MEDIA_TYPES,\r\n } from './constants';\r\n \r\n export const pickRelevantMediaFiles = ( image, size ) => {\r\n     const imageProps = pick( image, [ 'alt', 'id', 'link', 'caption' ] );\r\n     imageProps.url =\r\n         get( image, [ 'sizes', size, 'url' ] ) ||\r\n         get( image, [ 'media_details', 'sizes', size, 'source_url' ] ) ||\r\n         image.url;\r\n     return imageProps;\r\n };\r\n \r\n /**\r\n  * Is the URL a temporary blob URL? A blob URL is one that is used temporarily\r\n  * while the image is being uploaded and will not have an id yet allocated.\r\n  *\r\n  * @param {number=} id  The id of the image.\r\n  * @param {string=} url The url of the image.\r\n  *\r\n  * @return {boolean} Is the URL a Blob URL\r\n  */\r\n const isTemporaryImage = ( id, url ) => ! id && isBlobURL( url );\r\n \r\n /**\r\n  * Is the url for the image hosted externally. An externally hosted image has no\r\n  * id and is not a blob url.\r\n  *\r\n  * @param {number=} id  The id of the image.\r\n  * @param {string=} url The url of the image.\r\n  *\r\n  * @return {boolean} Is the url an externally hosted url?\r\n  */\r\n export const isExternalImage = ( id, url ) => url && ! id && ! isBlobURL( url );\r\n \r\n /**\r\n  * Checks if WP generated default image size. Size generation is skipped\r\n  * when the image is smaller than the said size.\r\n  *\r\n  * @param {Object} image\r\n  * @param {string} defaultSize\r\n  *\r\n  * @return {boolean} Whether or not it has default image size.\r\n  */\r\n function hasDefaultSize( image, defaultSize ) {\r\n     return (\r\n         has( image, [ 'sizes', defaultSize, 'url' ] ) ||\r\n         has( image, [ 'media_details', 'sizes', defaultSize, 'source_url' ] )\r\n     );\r\n }\r\n \r\n export function ImageEdit( {\r\n     attributes,\r\n     setAttributes,\r\n     isSelected,\r\n     className,\r\n     noticeUI,\r\n     insertBlocksAfter,\r\n     noticeOperations,\r\n     onReplace,\r\n     context,\r\n     clientId,\r\n } ) {\r\n     const {\r\n         url = '',\r\n         alt,\r\n         caption,\r\n         align,\r\n         id,\r\n         width,\r\n         height,\r\n         sizeSlug,\r\n     } = attributes;\r\n     const [ temporaryURL, setTemporaryURL ] = useState();\r\n \r\n     const altRef = useRef();\r\n     useEffect( () => {\r\n         altRef.current = alt;\r\n     }, [ alt ] );\r\n \r\n     const captionRef = useRef();\r\n     useEffect( () => {\r\n         captionRef.current = caption;\r\n     }, [ caption ] );\r\n \r\n     const ref = useRef();\r\n     const { imageDefaultSize, mediaUpload } = useSelect( ( select ) => {\r\n         const { getSettings } = select( blockEditorStore );\r\n         return pick( getSettings(), [ 'imageDefaultSize', 'mediaUpload' ] );\r\n     }, [] );\r\n \r\n     function onUploadError( message ) {\r\n         noticeOperations.removeAllNotices();\r\n         noticeOperations.createErrorNotice( message );\r\n         setAttributes( {\r\n             src: undefined,\r\n             id: undefined,\r\n             url: undefined,\r\n         } );\r\n         setTemporaryURL( undefined );\r\n     }\r\n \r\n     function onSelectImage( media ) {\r\n         if ( ! media || ! media.url ) {\r\n             setAttributes( {\r\n                 url: undefined,\r\n                 alt: undefined,\r\n                 id: undefined,\r\n                 title: undefined,\r\n                 caption: undefined,\r\n             } );\r\n \r\n             return;\r\n         }\r\n \r\n         if ( isBlobURL( media.url ) ) {\r\n             setTemporaryURL( media.url );\r\n             return;\r\n         }\r\n \r\n         setTemporaryURL();\r\n \r\n         let mediaAttributes = pickRelevantMediaFiles( media, imageDefaultSize );\r\n \r\n         // If a caption text was meanwhile written by the user,\r\n         // make sure the text is not overwritten by empty captions.\r\n         if ( captionRef.current && ! get( mediaAttributes, [ 'caption' ] ) ) {\r\n             mediaAttributes = omit( mediaAttributes, [ 'caption' ] );\r\n         }\r\n \r\n         let additionalAttributes;\r\n         // Reset the dimension attributes if changing to a different image.\r\n         if ( ! media.id || media.id !== id ) {\r\n             additionalAttributes = {\r\n                 width: undefined,\r\n                 height: undefined,\r\n                 // Fallback to size \"full\" if there's no default image size.\r\n                 // It means the image is smaller, and the block will use a full-size URL.\r\n                 sizeSlug: hasDefaultSize( media, imageDefaultSize )\r\n                     ? imageDefaultSize\r\n                     : 'full',\r\n             };\r\n         } else {\r\n             // Keep the same url when selecting the same file, so \"Image Size\"\r\n             // option is not changed.\r\n             additionalAttributes = { url };\r\n         }\r\n \r\n         // Check if default link setting should be used.\r\n         let linkDestination = attributes.linkDestination;\r\n         if ( ! linkDestination ) {\r\n             // Use the WordPress option to determine the proper default.\r\n             // The constants used in Gutenberg do not match WP options so a little more complicated than ideal.\r\n             // TODO: fix this in a follow up PR, requires updating media-text and ui component.\r\n             switch (\r\n                 window?.wp?.media?.view?.settings?.defaultProps?.link ||\r\n                 LINK_DESTINATION_NONE\r\n             ) {\r\n                 case 'file':\r\n                 case LINK_DESTINATION_MEDIA:\r\n                     linkDestination = LINK_DESTINATION_MEDIA;\r\n                     break;\r\n                 case 'post':\r\n                 case LINK_DESTINATION_ATTACHMENT:\r\n                     linkDestination = LINK_DESTINATION_ATTACHMENT;\r\n                     break;\r\n                 case LINK_DESTINATION_CUSTOM:\r\n                     linkDestination = LINK_DESTINATION_CUSTOM;\r\n                     break;\r\n                 case LINK_DESTINATION_NONE:\r\n                     linkDestination = LINK_DESTINATION_NONE;\r\n                     break;\r\n             }\r\n         }\r\n \r\n         // Check if the image is linked to it's media.\r\n         let href;\r\n         switch ( linkDestination ) {\r\n             case LINK_DESTINATION_MEDIA:\r\n                 href = media.url;\r\n                 break;\r\n             case LINK_DESTINATION_ATTACHMENT:\r\n                 href = media.link;\r\n                 break;\r\n         }\r\n         mediaAttributes.href = href;\r\n \r\n         setAttributes( {\r\n             ...mediaAttributes,\r\n             ...additionalAttributes,\r\n             linkDestination,\r\n         } );\r\n     }\r\n \r\n     function onSelectURL( newURL ) {\r\n         if ( newURL !== url ) {\r\n             setAttributes( {\r\n                 url: newURL,\r\n                 id: undefined,\r\n                 width: undefined,\r\n                 height: undefined,\r\n                 sizeSlug: imageDefaultSize,\r\n             } );\r\n         }\r\n     }\r\n \r\n     function updateAlignment( nextAlign ) {\r\n         const extraUpdatedAttributes = [ 'wide', 'full' ].includes( nextAlign )\r\n             ? { width: undefined, height: undefined }\r\n             : {};\r\n         setAttributes( {\r\n             ...extraUpdatedAttributes,\r\n             align: nextAlign,\r\n         } );\r\n     }\r\n \r\n     let isTemp = isTemporaryImage( id, url );\r\n \r\n     // Upload a temporary image on mount.\r\n     useEffect( () => {\r\n         if ( ! isTemp ) {\r\n             return;\r\n         }\r\n \r\n         const file = getBlobByURL( url );\r\n \r\n         if ( file ) {\r\n             mediaUpload( {\r\n                 filesList: [ file ],\r\n                 onFileChange: ( [ img ] ) => {\r\n                     onSelectImage( img );\r\n                 },\r\n                 allowedTypes: ALLOWED_MEDIA_TYPES,\r\n                 onError: ( message ) => {\r\n                     isTemp = false;\r\n                     onUploadError( message );\r\n                 },\r\n             } );\r\n         }\r\n     }, [] );\r\n \r\n     // If an image is temporary, revoke the Blob url when it is uploaded (and is\r\n     // no longer temporary).\r\n     useEffect( () => {\r\n         if ( isTemp ) {\r\n             setTemporaryURL( url );\r\n             return;\r\n         }\r\n         revokeBlobURL( temporaryURL );\r\n     }, [ isTemp, url ] );\r\n \r\n     const isExternal = isExternalImage( id, url );\r\n     const src = isExternal ? url : undefined;\r\n     const mediaPreview = !! url && (\r\n         <img\r\n             alt={ __( 'Edit image' ) }\r\n             title={ __( 'Edit image' ) }\r\n             className={ 'edit-image-preview' }\r\n             src={ url }\r\n         />\r\n     );\r\n \r\n     const borderProps = useBorderProps( attributes );\r\n \r\n     const classes = classnames( className, {\r\n         'is-transient': temporaryURL,\r\n         'is-resized': !! width || !! height,\r\n         [ `size-${ sizeSlug }` ]: sizeSlug,\r\n         'has-custom-border':\r\n             !! borderProps.className || ! isEmpty( borderProps.style ),\r\n     } );\r\n \r\n     const blockProps = useBlockProps( {\r\n         ref,\r\n         className: classes,\r\n     } );\r\n \r\n     return (\r\n         <figure { ...blockProps }>\r\n             { ( temporaryURL || url ) && (\r\n                 <Image\r\n                     temporaryURL={ temporaryURL }\r\n                     attributes={ attributes }\r\n                     setAttributes={ setAttributes }\r\n                     isSelected={ isSelected }\r\n                     insertBlocksAfter={ insertBlocksAfter }\r\n                     onReplace={ onReplace }\r\n                     onSelectImage={ onSelectImage }\r\n                     onSelectURL={ onSelectURL }\r\n                     onUploadError={ onUploadError }\r\n                     containerRef={ ref }\r\n                     context={ context }\r\n                     clientId={ clientId }\r\n                 />\r\n             ) }\r\n             { ! url && (\r\n                 <BlockControls group=\"block\">\r\n                     <BlockAlignmentControl\r\n                         value={ align }\r\n                         onChange={ updateAlignment }\r\n                     />\r\n                 </BlockControls>\r\n             ) }\r\n             <MediaPlaceholder\r\n                 icon={ <BlockIcon icon={ icon } /> }\r\n                 onSelect={ onSelectImage }\r\n                 onSelectURL={ onSelectURL }\r\n                 notices={ noticeUI }\r\n                 onError={ onUploadError }\r\n                 accept=\"image/*\"\r\n                 allowedTypes={ ALLOWED_MEDIA_TYPES }\r\n                 value={ { id, src } }\r\n                 mediaPreview={ mediaPreview }\r\n                 disableMediaButtons={ temporaryURL || url }\r\n             />\r\n         </figure>\r\n     );\r\n }\r\n \r\n export default withNotices( ImageEdit );","/**\r\n * External dependencies\r\n */\r\n import { get, filter, isEmpty, map, pick, includes } from 'lodash';\r\n\r\n /**\r\n  * WordPress dependencies\r\n  */\r\n import { isBlobURL } from '@wordpress/blob';\r\n import {\r\n     ExternalLink,\r\n     PanelBody,\r\n     ResizableBox,\r\n     Spinner,\r\n     TextareaControl,\r\n     TextControl,\r\n     ToolbarButton,\r\n } from '@wordpress/components';\r\n import { useViewportMatch, usePrevious } from '@wordpress/compose';\r\n import { useSelect, useDispatch } from '@wordpress/data';\r\n import {\r\n     BlockControls,\r\n     InspectorControls,\r\n     RichText,\r\n     __experimentalImageSizeControl as ImageSizeControl,\r\n     __experimentalImageURLInputUI as ImageURLInputUI,\r\n     MediaReplaceFlow,\r\n     store as blockEditorStore,\r\n     BlockAlignmentControl,\r\n     __experimentalImageEditor as ImageEditor,\r\n     __experimentalImageEditingProvider as ImageEditingProvider,\r\n     __experimentalGetElementClassName,\r\n     __experimentalUseBorderProps as useBorderProps,\r\n } from '@wordpress/block-editor';\r\n import { useEffect, useMemo, useState, useRef } from '@wordpress/element';\r\n import { __, sprintf, isRTL } from '@wordpress/i18n';\r\n import { getFilename } from '@wordpress/url';\r\n import {\r\n     createBlock,\r\n     getDefaultBlockName,\r\n     switchToBlockType,\r\n } from '@wordpress/blocks';\r\n import { crop, overlayText, upload } from '@wordpress/icons';\r\n import { store as noticesStore } from '@wordpress/notices';\r\n import { store as coreStore } from '@wordpress/core-data';\r\n \r\n /**\r\n  * Internal dependencies\r\n  */\r\n import { createUpgradedEmbedBlock } from '../embed/util';\r\n import useClientWidth from './use-client-width';\r\n import { isExternalImage } from './edit';\r\n \r\n /**\r\n  * Module constants\r\n  */\r\n import { MIN_SIZE, ALLOWED_MEDIA_TYPES } from './constants';\r\n \r\n export default function Image( {\r\n     temporaryURL,\r\n     attributes,\r\n     setAttributes,\r\n     isSelected,\r\n     insertBlocksAfter,\r\n     onReplace,\r\n     onSelectImage,\r\n     onSelectURL,\r\n     onUploadError,\r\n     containerRef,\r\n     context,\r\n     clientId,\r\n } ) {\r\n     const {\r\n         url = '',\r\n         alt,\r\n         caption,\r\n         align,\r\n         id,\r\n         href,\r\n         rel,\r\n         linkClass,\r\n         linkDestination,\r\n         title,\r\n         width,\r\n         height,\r\n         linkTarget,\r\n         sizeSlug,\r\n     } = attributes;\r\n     const imageRef = useRef();\r\n     const captionRef = useRef();\r\n     const prevUrl = usePrevious( url );\r\n     const { allowResize = true } = context;\r\n     const { getBlock } = useSelect( blockEditorStore );\r\n \r\n     const { image, multiImageSelection } = useSelect(\r\n         ( select ) => {\r\n             const { getMedia } = select( coreStore );\r\n             const { getMultiSelectedBlockClientIds, getBlockName } =\r\n                 select( blockEditorStore );\r\n             const multiSelectedClientIds = getMultiSelectedBlockClientIds();\r\n             return {\r\n                 image:\r\n                     id && isSelected\r\n                         ? getMedia( id, { context: 'view' } )\r\n                         : null,\r\n                 multiImageSelection:\r\n                     multiSelectedClientIds.length &&\r\n                     multiSelectedClientIds.every(\r\n                         ( _clientId ) =>\r\n                             getBlockName( _clientId ) === 'core/image'\r\n                     ),\r\n             };\r\n         },\r\n         [ id, isSelected ]\r\n     );\r\n     const { canInsertCover, imageEditing, imageSizes, maxWidth, mediaUpload } =\r\n         useSelect(\r\n             ( select ) => {\r\n                 const {\r\n                     getBlockRootClientId,\r\n                     getSettings,\r\n                     canInsertBlockType,\r\n                 } = select( blockEditorStore );\r\n \r\n                 const rootClientId = getBlockRootClientId( clientId );\r\n                 const settings = pick( getSettings(), [\r\n                     'imageEditing',\r\n                     'imageSizes',\r\n                     'maxWidth',\r\n                     'mediaUpload',\r\n                 ] );\r\n \r\n                 return {\r\n                     ...settings,\r\n                     canInsertCover: canInsertBlockType(\r\n                         'core/cover',\r\n                         rootClientId\r\n                     ),\r\n                 };\r\n             },\r\n             [ clientId ]\r\n         );\r\n     const { replaceBlocks, toggleSelection } = useDispatch( blockEditorStore );\r\n     const { createErrorNotice, createSuccessNotice } =\r\n         useDispatch( noticesStore );\r\n     const isLargeViewport = useViewportMatch( 'medium' );\r\n     const isWideAligned = includes( [ 'wide', 'full' ], align );\r\n     const [\r\n         { loadedNaturalWidth, loadedNaturalHeight },\r\n         setLoadedNaturalSize,\r\n     ] = useState( {} );\r\n     const [ isEditingImage, setIsEditingImage ] = useState( false );\r\n     const [ externalBlob, setExternalBlob ] = useState();\r\n     const clientWidth = useClientWidth( containerRef, [ align ] );\r\n     const isResizable = allowResize && ! ( isWideAligned && isLargeViewport );\r\n     const imageSizeOptions = map(\r\n         filter( imageSizes, ( { slug } ) =>\r\n             get( image, [ 'media_details', 'sizes', slug, 'source_url' ] )\r\n         ),\r\n         ( { name, slug } ) => ( { value: slug, label: name } )\r\n     );\r\n \r\n     // If an image is externally hosted, try to fetch the image data. This may\r\n     // fail if the image host doesn't allow CORS with the domain. If it works,\r\n     // we can enable a button in the toolbar to upload the image.\r\n     useEffect( () => {\r\n         if ( ! isExternalImage( id, url ) || ! isSelected || externalBlob ) {\r\n             return;\r\n         }\r\n \r\n         window\r\n             .fetch( url )\r\n             .then( ( response ) => response.blob() )\r\n             .then( ( blob ) => setExternalBlob( blob ) )\r\n             // Do nothing, cannot upload.\r\n             .catch( () => {} );\r\n     }, [ id, url, isSelected, externalBlob ] );\r\n \r\n     // Focus the caption after inserting an image from the placeholder. This is\r\n     // done to preserve the behaviour of focussing the first tabbable element\r\n     // when a block is mounted. Previously, the image block would remount when\r\n     // the placeholder is removed. Maybe this behaviour could be removed.\r\n     useEffect( () => {\r\n         if ( url && ! prevUrl && isSelected ) {\r\n             captionRef.current.focus();\r\n         }\r\n     }, [ url, prevUrl ] );\r\n \r\n     // Get naturalWidth and naturalHeight from image ref, and fall back to loaded natural\r\n     // width and height. This resolves an issue in Safari where the loaded natural\r\n     // width and height is otherwise lost when switching between alignments.\r\n     // See: https://github.com/WordPress/gutenberg/pull/37210.\r\n     const { naturalWidth, naturalHeight } = useMemo( () => {\r\n         return {\r\n             naturalWidth:\r\n                 imageRef.current?.naturalWidth ||\r\n                 loadedNaturalWidth ||\r\n                 undefined,\r\n             naturalHeight:\r\n                 imageRef.current?.naturalHeight ||\r\n                 loadedNaturalHeight ||\r\n                 undefined,\r\n         };\r\n     }, [\r\n         loadedNaturalWidth,\r\n         loadedNaturalHeight,\r\n         imageRef.current?.complete,\r\n     ] );\r\n \r\n     function onResizeStart() {\r\n         toggleSelection( false );\r\n     }\r\n \r\n     function onResizeStop() {\r\n         toggleSelection( true );\r\n     }\r\n \r\n     function onImageError() {\r\n         // Check if there's an embed block that handles this URL, e.g., instagram URL.\r\n         // See: https://github.com/WordPress/gutenberg/pull/11472\r\n         const embedBlock = createUpgradedEmbedBlock( { attributes: { url } } );\r\n \r\n         if ( undefined !== embedBlock ) {\r\n             onReplace( embedBlock );\r\n         }\r\n     }\r\n \r\n     function onSetHref( props ) {\r\n         setAttributes( props );\r\n     }\r\n \r\n     function onSetTitle( value ) {\r\n         // This is the HTML title attribute, separate from the media object\r\n         // title.\r\n         setAttributes( { title: value } );\r\n     }\r\n \r\n     function updateAlt( newAlt ) {\r\n         setAttributes( { alt: newAlt } );\r\n     }\r\n \r\n     function updateImage( newSizeSlug ) {\r\n         const newUrl = get( image, [\r\n             'media_details',\r\n             'sizes',\r\n             newSizeSlug,\r\n             'source_url',\r\n         ] );\r\n         if ( ! newUrl ) {\r\n             return null;\r\n         }\r\n \r\n         setAttributes( {\r\n             url: newUrl,\r\n             width: undefined,\r\n             height: undefined,\r\n             sizeSlug: newSizeSlug,\r\n         } );\r\n     }\r\n \r\n     function uploadExternal() {\r\n         mediaUpload( {\r\n             filesList: [ externalBlob ],\r\n             onFileChange( [ img ] ) {\r\n                 onSelectImage( img );\r\n \r\n                 if ( isBlobURL( img.url ) ) {\r\n                     return;\r\n                 }\r\n \r\n                 setExternalBlob();\r\n                 createSuccessNotice( __( 'Image uploaded.' ), {\r\n                     type: 'snackbar',\r\n                 } );\r\n             },\r\n             allowedTypes: ALLOWED_MEDIA_TYPES,\r\n             onError( message ) {\r\n                 createErrorNotice( message, { type: 'snackbar' } );\r\n             },\r\n         } );\r\n     }\r\n \r\n     function updateAlignment( nextAlign ) {\r\n         const extraUpdatedAttributes = [ 'wide', 'full' ].includes( nextAlign )\r\n             ? { width: undefined, height: undefined }\r\n             : {};\r\n         setAttributes( {\r\n             ...extraUpdatedAttributes,\r\n             align: nextAlign,\r\n         } );\r\n     }\r\n \r\n     useEffect( () => {\r\n         if ( ! isSelected ) {\r\n             setIsEditingImage( false );\r\n         }\r\n     }, [ isSelected ] );\r\n \r\n     const canEditImage = id && naturalWidth && naturalHeight && imageEditing;\r\n     const allowCrop = ! multiImageSelection && canEditImage && ! isEditingImage;\r\n \r\n     function switchToCover() {\r\n         replaceBlocks(\r\n             clientId,\r\n             switchToBlockType( getBlock( clientId ), 'core/cover' )\r\n         );\r\n     }\r\n \r\n     const controls = (\r\n         <>\r\n             <BlockControls group=\"block\">\r\n                 <BlockAlignmentControl\r\n                     value={ align }\r\n                     onChange={ updateAlignment }\r\n                 />\r\n                 { ! multiImageSelection && ! isEditingImage && (\r\n                     <ImageURLInputUI\r\n                         url={ href || '' }\r\n                         onChangeUrl={ onSetHref }\r\n                         linkDestination={ linkDestination }\r\n                         mediaUrl={ ( image && image.source_url ) || url }\r\n                         mediaLink={ image && image.link }\r\n                         linkTarget={ linkTarget }\r\n                         linkClass={ linkClass }\r\n                         rel={ rel }\r\n                     />\r\n                 ) }\r\n                 { allowCrop && (\r\n                     <ToolbarButton\r\n                         onClick={ () => setIsEditingImage( true ) }\r\n                         icon={ crop }\r\n                         label={ __( 'Crop' ) }\r\n                     />\r\n                 ) }\r\n                 { externalBlob && (\r\n                     <ToolbarButton\r\n                         onClick={ uploadExternal }\r\n                         icon={ upload }\r\n                         label={ __( 'Upload external image' ) }\r\n                     />\r\n                 ) }\r\n                 { ! multiImageSelection && canInsertCover && (\r\n                     <ToolbarButton\r\n                         icon={ overlayText }\r\n                         label={ __( 'Add text over image' ) }\r\n                         onClick={ switchToCover }\r\n                     />\r\n                 ) }\r\n             </BlockControls>\r\n             { ! multiImageSelection && ! isEditingImage && (\r\n                 <BlockControls group=\"other\">\r\n                     <MediaReplaceFlow\r\n                         mediaId={ id }\r\n                         mediaURL={ url }\r\n                         allowedTypes={ ALLOWED_MEDIA_TYPES }\r\n                         accept=\"image/*\"\r\n                         onSelect={ onSelectImage }\r\n                         onSelectURL={ onSelectURL }\r\n                         onError={ onUploadError }\r\n                     />\r\n                 </BlockControls>\r\n             ) }\r\n             <InspectorControls>\r\n                 <PanelBody title={ __( 'Settings' ) }>\r\n                     { ! multiImageSelection && (\r\n                         <TextareaControl\r\n                             label={ __( 'Alt text (alternative text)' ) }\r\n                             value={ alt }\r\n                             onChange={ updateAlt }\r\n                             help={\r\n                                 <>\r\n                                     <ExternalLink href=\"https://www.w3.org/WAI/tutorials/images/decision-tree\">\r\n                                         { __(\r\n                                             'Describe the purpose of the image'\r\n                                         ) }\r\n                                     </ExternalLink>\r\n                                     { __(\r\n                                         'Leave empty if the image is purely decorative.'\r\n                                     ) }\r\n                                 </>\r\n                             }\r\n                         />\r\n                     ) }\r\n                     <ImageSizeControl\r\n                         onChangeImage={ updateImage }\r\n                         onChange={ ( value ) => setAttributes( value ) }\r\n                         slug={ sizeSlug }\r\n                         width={ width }\r\n                         height={ height }\r\n                         imageSizeOptions={ imageSizeOptions }\r\n                         isResizable={ isResizable }\r\n                         imageWidth={ naturalWidth }\r\n                         imageHeight={ naturalHeight }\r\n                     />\r\n                 </PanelBody>\r\n             </InspectorControls>\r\n             <InspectorControls __experimentalGroup=\"advanced\">\r\n                 <TextControl\r\n                     label={ __( 'Title attribute' ) }\r\n                     value={ title || '' }\r\n                     onChange={ onSetTitle }\r\n                     help={\r\n                         <>\r\n                             { __(\r\n                                 'Describe the role of this image on the page.'\r\n                             ) }\r\n                             <ExternalLink href=\"https://www.w3.org/TR/html52/dom.html#the-title-attribute\">\r\n                                 { __(\r\n                                     '(Note: many devices and browsers do not display this text.)'\r\n                                 ) }\r\n                             </ExternalLink>\r\n                         </>\r\n                     }\r\n                 />\r\n             </InspectorControls>\r\n         </>\r\n     );\r\n \r\n     const filename = getFilename( url );\r\n     let defaultedAlt;\r\n \r\n     if ( alt ) {\r\n         defaultedAlt = alt;\r\n     } else if ( filename ) {\r\n         defaultedAlt = sprintf(\r\n             /* translators: %s: file name */\r\n             __( 'This image has an empty alt attribute; its file name is %s' ),\r\n             filename\r\n         );\r\n     } else {\r\n         defaultedAlt = __( 'This image has an empty alt attribute' );\r\n     }\r\n \r\n     const borderProps = useBorderProps( attributes );\r\n     const isRounded = attributes.className?.includes( 'is-style-rounded' );\r\n     const hasCustomBorder =\r\n         !! borderProps.className || ! isEmpty( borderProps.style );\r\n \r\n     let img = (\r\n         // Disable reason: Image itself is not meant to be interactive, but\r\n         // should direct focus to block.\r\n         /* eslint-disable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\r\n         <>\r\n             <img\r\n                 src={ temporaryURL || url }\r\n                 alt={ defaultedAlt }\r\n                 onError={ () => onImageError() }\r\n                 onLoad={ ( event ) => {\r\n                     setLoadedNaturalSize( {\r\n                         loadedNaturalWidth: event.target?.naturalWidth,\r\n                         loadedNaturalHeight: event.target?.naturalHeight,\r\n                     } );\r\n                 } }\r\n                 ref={ imageRef }\r\n                 className={ borderProps.className }\r\n                 style={ borderProps.style }\r\n             />\r\n             { temporaryURL && <Spinner /> }\r\n         </>\r\n         /* eslint-enable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\r\n     );\r\n \r\n     let imageWidthWithinContainer;\r\n     let imageHeightWithinContainer;\r\n \r\n     if ( clientWidth && naturalWidth && naturalHeight ) {\r\n         const exceedMaxWidth = naturalWidth > clientWidth;\r\n         const ratio = naturalHeight / naturalWidth;\r\n         imageWidthWithinContainer = exceedMaxWidth ? clientWidth : naturalWidth;\r\n         imageHeightWithinContainer = exceedMaxWidth\r\n             ? clientWidth * ratio\r\n             : naturalHeight;\r\n     }\r\n \r\n     if ( canEditImage && isEditingImage ) {\r\n         img = (\r\n             <ImageEditor\r\n                 borderProps={ isRounded ? undefined : borderProps }\r\n                 url={ url }\r\n                 width={ width }\r\n                 height={ height }\r\n                 clientWidth={ clientWidth }\r\n                 naturalHeight={ naturalHeight }\r\n                 naturalWidth={ naturalWidth }\r\n             />\r\n         );\r\n     } else if ( ! isResizable || ! imageWidthWithinContainer ) {\r\n         img = <div style={ { width, height } }>{ img }</div>;\r\n     } else {\r\n         const currentWidth = width || imageWidthWithinContainer;\r\n         const currentHeight = height || imageHeightWithinContainer;\r\n \r\n         const ratio = naturalWidth / naturalHeight;\r\n         const minWidth =\r\n             naturalWidth < naturalHeight ? MIN_SIZE : MIN_SIZE * ratio;\r\n         const minHeight =\r\n             naturalHeight < naturalWidth ? MIN_SIZE : MIN_SIZE / ratio;\r\n \r\n         // With the current implementation of ResizableBox, an image needs an\r\n         // explicit pixel value for the max-width. In absence of being able to\r\n         // set the content-width, this max-width is currently dictated by the\r\n         // vanilla editor style. The following variable adds a buffer to this\r\n         // vanilla style, so 3rd party themes have some wiggleroom. This does,\r\n         // in most cases, allow you to scale the image beyond the width of the\r\n         // main column, though not infinitely.\r\n         // @todo It would be good to revisit this once a content-width variable\r\n         // becomes available.\r\n         const maxWidthBuffer = maxWidth * 2.5;\r\n \r\n         let showRightHandle = false;\r\n         let showLeftHandle = false;\r\n \r\n         /* eslint-disable no-lonely-if */\r\n         // See https://github.com/WordPress/gutenberg/issues/7584.\r\n         if ( align === 'center' ) {\r\n             // When the image is centered, show both handles.\r\n             showRightHandle = true;\r\n             showLeftHandle = true;\r\n         } else if ( isRTL() ) {\r\n             // In RTL mode the image is on the right by default.\r\n             // Show the right handle and hide the left handle only when it is\r\n             // aligned left. Otherwise always show the left handle.\r\n             if ( align === 'left' ) {\r\n                 showRightHandle = true;\r\n             } else {\r\n                 showLeftHandle = true;\r\n             }\r\n         } else {\r\n             // Show the left handle and hide the right handle only when the\r\n             // image is aligned right. Otherwise always show the right handle.\r\n             if ( align === 'right' ) {\r\n                 showLeftHandle = true;\r\n             } else {\r\n                 showRightHandle = true;\r\n             }\r\n         }\r\n         /* eslint-enable no-lonely-if */\r\n \r\n         img = (\r\n             <ResizableBox\r\n                 size={ {\r\n                     width: width ?? 'auto',\r\n                     height: height && ! hasCustomBorder ? height : 'auto',\r\n                 } }\r\n                 showHandle={ isSelected }\r\n                 minWidth={ minWidth }\r\n                 maxWidth={ maxWidthBuffer }\r\n                 minHeight={ minHeight }\r\n                 maxHeight={ maxWidthBuffer / ratio }\r\n                 lockAspectRatio\r\n                 enable={ {\r\n                     top: false,\r\n                     right: showRightHandle,\r\n                     bottom: true,\r\n                     left: showLeftHandle,\r\n                 } }\r\n                 onResizeStart={ onResizeStart }\r\n                 onResizeStop={ ( event, direction, elt, delta ) => {\r\n                     onResizeStop();\r\n                     setAttributes( {\r\n                         width: parseInt( currentWidth + delta.width, 10 ),\r\n                         height: parseInt( currentHeight + delta.height, 10 ),\r\n                     } );\r\n                 } }\r\n             >\r\n                 { img }\r\n             </ResizableBox>\r\n         );\r\n     }\r\n \r\n     return (\r\n         <ImageEditingProvider\r\n             id={ id }\r\n             url={ url }\r\n             naturalWidth={ naturalWidth }\r\n             naturalHeight={ naturalHeight }\r\n             clientWidth={ clientWidth }\r\n             onSaveImage={ ( imageAttributes ) =>\r\n                 setAttributes( imageAttributes )\r\n             }\r\n             isEditing={ isEditingImage }\r\n             onFinishEditing={ () => setIsEditingImage( false ) }\r\n         >\r\n             { /* Hide controls during upload to avoid component remount,\r\n                 which causes duplicated image upload. */ }\r\n             { ! temporaryURL && controls }\r\n             { img }\r\n             { ( ! RichText.isEmpty( caption ) || isSelected ) && (\r\n                 <RichText\r\n                     className={ __experimentalGetElementClassName( 'caption' ) }\r\n                     ref={ captionRef }\r\n                     tagName=\"figcaption\"\r\n                     aria-label={ __( 'Image caption text' ) }\r\n                     placeholder={ __( 'Add caption' ) }\r\n                     value={ caption }\r\n                     onChange={ ( value ) =>\r\n                         setAttributes( { caption: value } )\r\n                     }\r\n                     inlineToolbar\r\n                     __unstableOnSplitAtEnd={ () =>\r\n                         insertBlocksAfter(\r\n                             createBlock( getDefaultBlockName() )\r\n                         )\r\n                     }\r\n                 />\r\n             ) }\r\n         </ImageEditingProvider>\r\n     );\r\n }","/**\r\n * External dependencies\r\n */\r\nimport classnames from 'classnames';\r\nimport { isEmpty } from 'lodash';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tRichText,\r\n\tuseBlockProps,\r\n\t__experimentalGetElementClassName,\r\n\t__experimentalGetBorderClassesAndStyles as getBorderClassesAndStyles,\r\n} from '@wordpress/block-editor';\r\n\r\nexport default function save( { attributes } ) {\r\n\tconst {\r\n\t\turl,\r\n\t\talt,\r\n\t\tcaption,\r\n\t\talign,\r\n\t\thref,\r\n\t\trel,\r\n\t\tlinkClass,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tid,\r\n\t\tlinkTarget,\r\n\t\tsizeSlug,\r\n\t\ttitle,\r\n\t} = attributes;\r\n\r\n\tconst newRel = isEmpty( rel ) ? undefined : rel;\r\n\tconst borderProps = getBorderClassesAndStyles( attributes );\r\n\r\n\tconst classes = classnames( {\r\n\t\t[ `align${ align }` ]: align,\r\n\t\t[ `size-${ sizeSlug }` ]: sizeSlug,\r\n\t\t'is-resized': width || height,\r\n\t\t'has-custom-border':\r\n\t\t\t!! borderProps.className || ! isEmpty( borderProps.style ),\r\n\t} );\r\n\r\n\tconst imageClasses = classnames( borderProps.className, {\r\n\t\t[ `wp-image-${ id }` ]: !! id,\r\n\t} );\r\n\r\n\tconst image = (\r\n\t\t<img\r\n\t\t\tsrc={ url }\r\n\t\t\talt={ alt }\r\n\t\t\tclassName={ imageClasses || undefined }\r\n\t\t\tstyle={ borderProps.style }\r\n\t\t\twidth={ width }\r\n\t\t\theight={ height }\r\n\t\t\ttitle={ title }\r\n\t\t/>\r\n\t);\r\n\r\n\tconst figure = (\r\n\t\t<>\r\n\t\t\t{ href ? (\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName={ linkClass }\r\n\t\t\t\t\thref={ href }\r\n\t\t\t\t\ttarget={ linkTarget }\r\n\t\t\t\t\trel={ newRel }\r\n\t\t\t\t>\r\n\t\t\t\t\t{ image }\r\n\t\t\t\t</a>\r\n\t\t\t) : (\r\n\t\t\t\timage\r\n\t\t\t) }\r\n\t\t\t{ ! RichText.isEmpty( caption ) && (\r\n\t\t\t\t<RichText.Content\r\n\t\t\t\t\tclassName={ __experimentalGetElementClassName( 'caption' ) }\r\n\t\t\t\t\ttagName=\"figcaption\"\r\n\t\t\t\t\tvalue={ caption }\r\n\t\t\t\t/>\r\n\t\t\t) }\r\n\t\t</>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<figure { ...useBlockProps.save( { className: classes } ) }>\r\n\t\t\t{ figure }\r\n\t\t</figure>\r\n\t);\r\n}","/**\r\n * External dependencies\r\n */\r\n import { every } from 'lodash';\r\n\r\n /**\r\n  * WordPress dependencies\r\n  */\r\n import { createBlobURL } from '@wordpress/blob';\r\n import { createBlock, getBlockAttributes } from '@wordpress/blocks';\r\n import { dispatch } from '@wordpress/data';\r\n import { store as noticesStore } from '@wordpress/notices';\r\n import { __ } from '@wordpress/i18n';\r\n \r\n export function stripFirstImage( attributes, { shortcode } ) {\r\n     const { body } = document.implementation.createHTMLDocument( '' );\r\n \r\n     body.innerHTML = shortcode.content;\r\n \r\n     let nodeToRemove = body.querySelector( 'img' );\r\n \r\n     // If an image has parents, find the topmost node to remove.\r\n     while (\r\n         nodeToRemove &&\r\n         nodeToRemove.parentNode &&\r\n         nodeToRemove.parentNode !== body\r\n     ) {\r\n         nodeToRemove = nodeToRemove.parentNode;\r\n     }\r\n \r\n     if ( nodeToRemove ) {\r\n         nodeToRemove.parentNode.removeChild( nodeToRemove );\r\n     }\r\n \r\n     return body.innerHTML.trim();\r\n }\r\n \r\n function getFirstAnchorAttributeFormHTML( html, attributeName ) {\r\n     const { body } = document.implementation.createHTMLDocument( '' );\r\n \r\n     body.innerHTML = html;\r\n \r\n     const { firstElementChild } = body;\r\n \r\n     if ( firstElementChild && firstElementChild.nodeName === 'A' ) {\r\n         return firstElementChild.getAttribute( attributeName ) || undefined;\r\n     }\r\n }\r\n \r\n const imageSchema = {\r\n     img: {\r\n         attributes: [ 'src', 'alt', 'title' ],\r\n         classes: [\r\n             'alignleft',\r\n             'aligncenter',\r\n             'alignright',\r\n             'alignnone',\r\n             /^wp-image-\\d+$/,\r\n         ],\r\n     },\r\n };\r\n \r\n const schema = ( { phrasingContentSchema } ) => ( {\r\n     figure: {\r\n         require: [ 'img' ],\r\n         children: {\r\n             ...imageSchema,\r\n             a: {\r\n                 attributes: [ 'href', 'rel', 'target' ],\r\n                 children: imageSchema,\r\n             },\r\n             figcaption: {\r\n                 children: phrasingContentSchema,\r\n             },\r\n         },\r\n     },\r\n } );\r\n \r\n const transforms = {\r\n     from: [\r\n         {\r\n             type: 'raw',\r\n             isMatch: ( node ) =>\r\n                 node.nodeName === 'FIGURE' && !! node.querySelector( 'img' ),\r\n             schema,\r\n             transform: ( node ) => {\r\n                 // Search both figure and image classes. Alignment could be\r\n                 // set on either. ID is set on the image.\r\n                 const className =\r\n                     node.className +\r\n                     ' ' +\r\n                     node.querySelector( 'img' ).className;\r\n                 const alignMatches =\r\n                     /(?:^|\\s)align(left|center|right)(?:$|\\s)/.exec(\r\n                         className\r\n                     );\r\n                 const anchor = node.id === '' ? undefined : node.id;\r\n                 const align = alignMatches ? alignMatches[ 1 ] : undefined;\r\n                 const idMatches = /(?:^|\\s)wp-image-(\\d+)(?:$|\\s)/.exec(\r\n                     className\r\n                 );\r\n                 const id = idMatches ? Number( idMatches[ 1 ] ) : undefined;\r\n                 const anchorElement = node.querySelector( 'a' );\r\n                 const linkDestination =\r\n                     anchorElement && anchorElement.href ? 'custom' : undefined;\r\n                 const href =\r\n                     anchorElement && anchorElement.href\r\n                         ? anchorElement.href\r\n                         : undefined;\r\n                 const rel =\r\n                     anchorElement && anchorElement.rel\r\n                         ? anchorElement.rel\r\n                         : undefined;\r\n                 const linkClass =\r\n                     anchorElement && anchorElement.className\r\n                         ? anchorElement.className\r\n                         : undefined;\r\n                 const attributes = getBlockAttributes(\r\n                     'core/image',\r\n                     node.outerHTML,\r\n                     {\r\n                         align,\r\n                         id,\r\n                         linkDestination,\r\n                         href,\r\n                         rel,\r\n                         linkClass,\r\n                         anchor,\r\n                     }\r\n                 );\r\n                 return createBlock( 'core/image', attributes );\r\n             },\r\n         },\r\n         {\r\n             // Note: when dragging and dropping multiple files onto a gallery this overrides the\r\n             // gallery transform in order to add new images to the gallery instead of\r\n             // creating a new gallery.\r\n             type: 'files',\r\n             isMatch( files ) {\r\n                 // The following check is intended to catch non-image files when dropped together with images.\r\n                 if (\r\n                     files.some(\r\n                         ( file ) => file.type.indexOf( 'image/' ) === 0\r\n                     ) &&\r\n                     files.some(\r\n                         ( file ) => file.type.indexOf( 'image/' ) !== 0\r\n                     )\r\n                 ) {\r\n                     const { createErrorNotice } = dispatch( noticesStore );\r\n                     createErrorNotice(\r\n                         __(\r\n                             'If uploading to a gallery all files need to be image formats'\r\n                         ),\r\n                         { id: 'gallery-transform-invalid-file' }\r\n                     );\r\n                 }\r\n                 return every(\r\n                     files,\r\n                     ( file ) => file.type.indexOf( 'image/' ) === 0\r\n                 );\r\n             },\r\n             transform( files ) {\r\n                 const blocks = files.map( ( file ) => {\r\n                     return createBlock( 'core/image', {\r\n                         url: createBlobURL( file ),\r\n                     } );\r\n                 } );\r\n                 return blocks;\r\n             },\r\n         },\r\n         {\r\n             type: 'shortcode',\r\n             tag: 'caption',\r\n             attributes: {\r\n                 url: {\r\n                     type: 'string',\r\n                     source: 'attribute',\r\n                     attribute: 'src',\r\n                     selector: 'img',\r\n                 },\r\n                 alt: {\r\n                     type: 'string',\r\n                     source: 'attribute',\r\n                     attribute: 'alt',\r\n                     selector: 'img',\r\n                 },\r\n                 caption: {\r\n                     shortcode: stripFirstImage,\r\n                 },\r\n                 href: {\r\n                     shortcode: ( attributes, { shortcode } ) => {\r\n                         return getFirstAnchorAttributeFormHTML(\r\n                             shortcode.content,\r\n                             'href'\r\n                         );\r\n                     },\r\n                 },\r\n                 rel: {\r\n                     shortcode: ( attributes, { shortcode } ) => {\r\n                         return getFirstAnchorAttributeFormHTML(\r\n                             shortcode.content,\r\n                             'rel'\r\n                         );\r\n                     },\r\n                 },\r\n                 linkClass: {\r\n                     shortcode: ( attributes, { shortcode } ) => {\r\n                         return getFirstAnchorAttributeFormHTML(\r\n                             shortcode.content,\r\n                             'class'\r\n                         );\r\n                     },\r\n                 },\r\n                 id: {\r\n                     type: 'number',\r\n                     shortcode: ( { named: { id } } ) => {\r\n                         if ( ! id ) {\r\n                             return;\r\n                         }\r\n \r\n                         return parseInt( id.replace( 'attachment_', '' ), 10 );\r\n                     },\r\n                 },\r\n                 align: {\r\n                     type: 'string',\r\n                     shortcode: ( { named: { align = 'alignnone' } } ) => {\r\n                         return align.replace( 'align', '' );\r\n                     },\r\n                 },\r\n             },\r\n         },\r\n     ],\r\n };\r\n \r\n export default transforms;","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"blob\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","module.exports = window[\"wp\"][\"url\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * WordPress dependencies\r\n */\r\n import { __ } from '@wordpress/i18n';\r\n import { image as icon } from '@wordpress/icons';\r\n \r\n /**\r\n  * Internal dependencies\r\n  */\r\n import deprecated from './deprecated';\r\n import edit from './edit';\r\n import metadata from './block.json';\r\n import save from './save';\r\n import transforms from './transforms';\r\n \r\n const { name } = metadata;\r\n \r\n export { metadata, name };\r\n \r\n export const settings = {\r\n     icon,\r\n     example: {\r\n         attributes: {\r\n             sizeSlug: 'large',\r\n             url: 'https://s.w.org/images/core/5.3/MtBlanc1.jpg',\r\n             // translators: Caption accompanying an image of the Mont Blanc, which serves as an example for the Image block.\r\n             caption: __( 'Mont Blanc appears—still, snowy, and serene.' ),\r\n         },\r\n     },\r\n     __experimentalLabel( attributes, { context } ) {\r\n         if ( context === 'accessibility' ) {\r\n             const { caption, alt, url } = attributes;\r\n \r\n             if ( ! url ) {\r\n                 return __( 'Empty' );\r\n             }\r\n \r\n             if ( ! alt ) {\r\n                 return caption || '';\r\n             }\r\n \r\n             // This is intended to be read by a screen reader.\r\n             // A period simply means a pause, no need to translate it.\r\n             return alt + ( caption ? '. ' + caption : '' );\r\n         }\r\n     },\r\n     getEditWrapperProps( attributes ) {\r\n         return {\r\n             'data-align': attributes.align,\r\n         };\r\n     },\r\n     transforms,\r\n     edit,\r\n     save,\r\n     deprecated,\r\n };"],"names":["MIN_SIZE","LINK_DESTINATION_NONE","LINK_DESTINATION_MEDIA","LINK_DESTINATION_ATTACHMENT","LINK_DESTINATION_CUSTOM","NEW_TAB_REL","ALLOWED_MEDIA_TYPES","MEDIA_ID_NO_FEATURED_IMAGE_SET","classnames","isEmpty","RichText","useBlockProps","blockAttributes","align","type","url","source","selector","attribute","alt","default","caption","title","href","rel","linkClass","id","width","height","sizeSlug","linkDestination","linkTarget","blockSupports","anchor","color","__experimentalDuotone","text","background","__experimentalBorder","radius","__experimentalDefaultControls","deprecated","attributes","supports","save","newRel","undefined","classes","image","figure","className","extraImageProps","figureStyle","maxWidth","get","has","omit","pick","getBlobByURL","isBlobURL","revokeBlobURL","withNotices","useSelect","BlockAlignmentControl","BlockControls","BlockIcon","MediaPlaceholder","store","blockEditorStore","__experimentalUseBorderProps","useBorderProps","useEffect","useRef","useState","__","icon","Image","pickRelevantMediaFiles","size","imageProps","isTemporaryImage","isExternalImage","hasDefaultSize","defaultSize","ImageEdit","setAttributes","isSelected","noticeUI","insertBlocksAfter","noticeOperations","onReplace","context","clientId","temporaryURL","setTemporaryURL","altRef","current","captionRef","ref","imageDefaultSize","mediaUpload","select","getSettings","onUploadError","message","removeAllNotices","createErrorNotice","src","onSelectImage","media","mediaAttributes","additionalAttributes","window","wp","view","settings","defaultProps","link","onSelectURL","newURL","updateAlignment","nextAlign","extraUpdatedAttributes","includes","isTemp","file","filesList","onFileChange","img","allowedTypes","onError","isExternal","mediaPreview","borderProps","style","blockProps","filter","map","ExternalLink","PanelBody","ResizableBox","Spinner","TextareaControl","TextControl","ToolbarButton","useViewportMatch","usePrevious","useDispatch","InspectorControls","__experimentalImageSizeControl","ImageSizeControl","__experimentalImageURLInputUI","ImageURLInputUI","MediaReplaceFlow","__experimentalImageEditor","ImageEditor","__experimentalImageEditingProvider","ImageEditingProvider","__experimentalGetElementClassName","useMemo","sprintf","isRTL","getFilename","createBlock","getDefaultBlockName","switchToBlockType","crop","overlayText","upload","noticesStore","coreStore","createUpgradedEmbedBlock","useClientWidth","containerRef","imageRef","prevUrl","allowResize","getBlock","multiImageSelection","getMedia","getMultiSelectedBlockClientIds","getBlockName","multiSelectedClientIds","length","every","_clientId","canInsertCover","imageEditing","imageSizes","getBlockRootClientId","canInsertBlockType","rootClientId","replaceBlocks","toggleSelection","createSuccessNotice","isLargeViewport","isWideAligned","loadedNaturalWidth","loadedNaturalHeight","setLoadedNaturalSize","isEditingImage","setIsEditingImage","externalBlob","setExternalBlob","clientWidth","isResizable","imageSizeOptions","slug","name","value","label","fetch","then","response","blob","catch","focus","naturalWidth","naturalHeight","complete","onResizeStart","onResizeStop","onImageError","embedBlock","onSetHref","props","onSetTitle","updateAlt","newAlt","updateImage","newSizeSlug","newUrl","uploadExternal","canEditImage","allowCrop","switchToCover","controls","source_url","filename","defaultedAlt","isRounded","hasCustomBorder","event","target","imageWidthWithinContainer","imageHeightWithinContainer","exceedMaxWidth","ratio","currentWidth","currentHeight","minWidth","minHeight","maxWidthBuffer","showRightHandle","showLeftHandle","top","right","bottom","left","direction","elt","delta","parseInt","imageAttributes","__experimentalGetBorderClassesAndStyles","getBorderClassesAndStyles","imageClasses","createBlobURL","getBlockAttributes","dispatch","stripFirstImage","shortcode","body","document","implementation","createHTMLDocument","innerHTML","content","nodeToRemove","querySelector","parentNode","removeChild","trim","getFirstAnchorAttributeFormHTML","html","attributeName","firstElementChild","nodeName","getAttribute","imageSchema","schema","phrasingContentSchema","require","children","a","figcaption","transforms","from","isMatch","node","transform","alignMatches","exec","idMatches","Number","anchorElement","outerHTML","files","some","indexOf","blocks","tag","named","replace","edit","metadata","example","__experimentalLabel","getEditWrapperProps"],"sourceRoot":""}